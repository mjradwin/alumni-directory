#!/usr/local/bin/perl

#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

require 'aid_util.pl';
require 'cgi-lib.pl';

if ($ENV{'SCRIPT_NAME'} =~ m,/nph-,)
{
    print "HTTP/1.1 200 OK\015\012",
          "Date: ", &aid_http_date(time), "\015\012";
    print "Server: ", $ENV{'SERVER_SOFTWARE'}, "\015\012"
	if defined $ENV{'SERVER_SOFTWARE'};
    print "Connection: close\015\012";
}

$dbmfile = &aid_config('dbmfile');
$dbmfile =~ s/\.db$//;

&CgiDie(&aid_config('short_school') . " Alumni: Script Error",
	"The database is unreadable.\n" .
	"Please <a href=\"mailto:" . &aid_config('admin_email') .
	"\">email " . &aid_config('admin_name') . "</a>.")
    unless -r "${dbmfile}.db";

dbmopen(%DB,$dbmfile,0444);

if (!&ReadParse() || !defined($in{'q'}) || $in{'q'} =~ /^\s*$/)
{
    print "Content-Type: text/html\015\012\015\012";

    print &aid_common_html_hdr(6, 'Search', 1);
    &print_search_form('',defined $in{'y'} ? $in{'y'} : '');
    print &aid_common_html_ftr(6);

    close(STDOUT);
    exit(0);
}

if (defined $DB{'_alpha'})
{
    @alpha_ids = unpack("n*",$DB{'_alpha'});
}
else
{
    dbmclose(%DB);
    &CgiDie(&aid_config('short_school') . " Alumni: Script Error",
	    "The alphabetic database is unavailable.\n" .
	    "Please <a href=\"mailto:" . &aid_config('admin_email') .
	    "\">email " . &aid_config('admin_name') . "</a>.");
}

$in{'q'} =~ s/^\s*//;
$in{'q'} =~ s/\s*$//;
$query = $in{'q'};
$query =~ s/[,\.;+'"\(\)\@_-]/ /g; #'#
$query =~ s/\band\b//ig;
$query =~ s/\bor\b//ig;
@search_terms = split(/\s+/, $query);

%results = ();
foreach (@alpha_ids)
{
    %rec = &aid_db_unpack_rec($_,$DB{$_});
    $fullname = &aid_inorder_fullname(*rec) . $rec{'e'};
    $key = "\L$rec{'sn'}\0$rec{'gn'}\0$rec{'mi'}\0$rec{'mn'}\0$rec{'yr'}\E\0$rec{'id'}";

    if (defined $in{'y'} && $in{'y'} ne '')
    {
	next if $in{'y'} eq 'other' && $rec{'yr'} =~ /^\d+$/;
	next unless ($in{'y'} eq $rec{'yr'}) || $in{'y'} eq 'other';
    }

    $results{$key} = 1;
    foreach $term (@search_terms)
    {
	if ($fullname !~ /$term/i)
	{
	    delete $results{$key};
	    last;
	}
    }
}
undef @alpha_ids;

print "Content-Type: text/html\015\012\015\012";

@results = sort keys %results;
undef %results;
if ($#results == -1)
{
    print &aid_common_html_hdr(6, 'No matches', 1);
    print "<p>Sorry, no matches were found containing\n";
    print "<strong>$in{'q'}</strong>";
    print "\nin <strong>Class of $in{'y'}</strong>"
	if defined $in{'y'} && $in{'y'} =~ /^\d+$/;
    print "\nin <strong>Faculty/Staff</strong>"
	if defined $in{'y'} && $in{'y'} eq 'other';
    print "\nin <strong>all graduating classes</strong>"
	if ! defined $in{'y'} || $in{'y'} eq '';
    print ".</p>\n\n";

    print "<p>You might try broadening your search.  Try just the first\n";
    print "or last name, or search \"all years\" instead of a particular\n";
    print "graduating class.  Or, just browse the\n";
    print "<a href=\"", &aid_config('master_path'), "alpha/a-index.html\">";
    print "Alphabetical</a> or\n";
    print "<a href=\"", &aid_config('master_path'), "class/\">";
    print "Graduating Class</a>\nlistings.</p>\n\n";

    print "<p>For some other reasons why you might not find who you're\n";
    print "looking for, please see the\n";
    print "<a href=\"", &aid_config('master_path');
    print "etc/faq.html#incomplete\">Frequently Asked Questions</a>.</p>\n\n";

    &print_search_form($in{'q'},$in{'y'});
    print &aid_common_html_ftr(6);

    dbmclose(%DB);
    close(STDOUT);
    exit(0);
}
else
{
    if ($#results == 0)
    {
	print &aid_common_html_hdr(6, 'Found 1 match', 1);
    }
    else
    {
	print &aid_common_html_hdr(6, 'Found ' . ($#results+1) . ' matches', 1);
    }

    print "\n<ul>\n";
    foreach (@results)
    {
	($ign,$ign,$ign,$ign,$ign,$id) = split(/\0/);
	%rec = &aid_db_unpack_rec($id,$DB{$id});
	$fullname = &aid_inorder_fullname(*rec);
	($affil,$ign) = &aid_affiliate(*rec,0);
	
	print "<li><a href=\"", &aid_config('about_cgi'), 
	"/", $rec{'id'}, "\">$fullname</a> $affil";
	
	if ($rec{'v'})
	{
	    print " (<code>$rec{'e'}</code>)";
	}
	else
	{
	    print " <em>(invalid e-mail address)</em>";
	}
	print "\n";
    }
    print "</ul>\n";
    &print_search_form($in{'q'},$in{'y'});
    print &aid_common_html_ftr(6);
}


dbmclose(%DB);
close(STDOUT);
exit(0);

sub print_search_form
{
    local($q,$y) = @_;
    local(@years);

    &CgiDie(&aid_config('short_school') . " Alumni: Script Error",
	    "The database is missing the years list!\n" .
	    "Please <a href=\"mailto:" . &aid_config('admin_email') .
	    "\">email " . &aid_config('admin_name') . "</a>.")
	unless defined $DB{'_class'};

    @years = unpack("n*",$DB{'_years'});
    push(@years, 'other');

    print "<center><p>\n";
    print "<form method=get action=\"" . &aid_config('search_cgi') . "\">\n";
    print " <input type=\"text\" name=\"q\" size=\"25\" value=\"$q\">\n";
    print " <select name=\"y\">\n";
    print "  <option";
    print " selected" if '' eq $y;
    print " value=\"\">all years\n";
    foreach (@years)
    {
	print "  <option";
	print " selected" if $_ eq $y;
	print ">$_\n" unless $_ eq 'other';
	print " value=\"other\">Faculty/Staff\n" if $_ eq 'other';
    }
    print " </select>\n";
    print " <input type=\"submit\" value=\"Search\">\n</form>\n";
    print "</p></center>\n";

    1;
}
