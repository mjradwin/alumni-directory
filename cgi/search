#!/usr/local/bin/perl5 -w

#
#     FILE: search.pl
#   AUTHOR: Michael J. Radwin
#    DESCR: Alumni Internet Directory CGI search
#      $Id: search,v 5.18 2000/05/30 17:28:07 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

require 'aid_util.pl';
use DB_File;
use Fcntl qw(:DEFAULT :flock);
use CGI;
use CGI::Carp qw(fatalsToBrowser);

$dbmfile = &aid_config('dbmfile');
die "$dbmfile: $!\n" unless -r $dbmfile;

my($db) = tie(%DB, 'DB_File', $dbmfile, O_RDONLY, 0444, $DB_File::DB_HASH)
    or die "$dbmfile: $!\n";

my($fd) = $db->fd;
open(DB_FH, "<&=$fd") || die "dup $!";

unless (flock (DB_FH, LOCK_SH | LOCK_NB)) {
    unless (flock (DB_FH, LOCK_SH)) { die "flock: $!" }
}

CGI::ReadParse();
if (!defined($in{'q'}) || $in{'q'} =~ /^[^\w]*$/)
{
    print "Content-Type: text/html\015\012\015\012";

    print &aid_common_html_hdr(6, 'Search', 1);
    &print_search_form('', defined $in{'y'} ? $in{'y'} : '');
    print &aid_common_html_ftr(6);

    flock(DB_FH, LOCK_UN);
    undef $db;
    untie(%DB);
    close(DB_FH);

    close(STDOUT);
    exit(0);
}

defined $DB{'_alpha'} || die "$dbmfile: missing _alpha\n";
@alpha_ids = unpack("n*",$DB{'_alpha'});

$query_save = $in{'q'};
$query_save =~ s/^\s*//;
$query_save =~ s/\s*$//;
$query = $query_save;
$query =~ s/[^\w]/ /g; #'#
$query =~ s/\band\b//ig;
$query =~ s/\bor\b//ig;
@search_terms = split(/\s+/, $query);

%results = ();
foreach (@alpha_ids)
{
    %rec = &aid_db_unpack_rec($_,$DB{$_});
    $fullname = &aid_inorder_fullname(*rec) . $rec{'e'};
    $key = "\L$rec{'sn'}\0$rec{'gn'}\0$rec{'mi'}\0$rec{'mn'}\0$rec{'yr'}\E\0$rec{'id'}";

    if (defined $in{'y'} && $in{'y'} ne '')
    {
	next if $in{'y'} eq 'other' && $rec{'yr'} =~ /^\d+$/;
	next unless ($in{'y'} eq $rec{'yr'}) || $in{'y'} eq 'other';
    }

    $results{$key} = 1;
    foreach $term (@search_terms)
    {
	if ($fullname !~ /$term/i)
	{
	    delete $results{$key};
	    last;
	}
    }
}
undef @alpha_ids;

print "Content-Type: text/html\015\012\015\012";

@results = sort keys %results;
undef %results;

$query_save = &aid_html_entify_str($query_save);

if ($#results == -1)
{
    print &aid_common_html_hdr(26, 'No matches', 1);
    print "<p>Sorry, no matches were found containing\n";
    print "<strong>$query_save</strong>";
    print "\nin <strong>Class of $in{'y'}</strong>"
	if defined $in{'y'} && $in{'y'} =~ /^\d+$/;
    print "\nin <strong>Faculty/Staff</strong>"
	if defined $in{'y'} && $in{'y'} eq 'other';
    print "\nin <strong>all graduating classes</strong>"
	if ! defined $in{'y'} || $in{'y'} eq '';
    print ".</p>\n\n";

    print "<p>You might try broadening your search.  Try just the first\n";
    print "or last name, or search \"all years\" instead of a particular\n";
    print "graduating class.  Or, just browse the\n";
    print "<a href=\"", &aid_config('master_path'), "alpha/\">";
    print "Alphabetical</a> or\n";
    print "<a href=\"", &aid_config('master_path'), "class/\">";
    print "Graduating Class</a>\nlistings.</p>\n\n";

    print "<p>For some other reasons why you might not find who you're\n";
    print "looking for, please see the\n";
    print "<a href=\"", &aid_config('master_path');
    print "etc/faq.html#incomplete\">Frequently Asked Questions</a>.</p>\n\n";

    &print_search_form($query_save, defined $in{'y'} ? $in{'y'} : '');
    print &aid_common_html_ftr(26);

    flock(DB_FH, LOCK_UN);
    undef $db;
    untie(%DB);
    close(DB_FH);

    close(STDOUT);
    exit(0);
}
else
{
    if ($#results == 0)
    {
	print &aid_common_html_hdr(26, 'Found 1 match', 1);
    }
    else
    {
	print &aid_common_html_hdr(26, 'Found ' . ($#results+1) . ' matches', 1);
    }

    print "\n<ul>\n";
    foreach (@results)
    {
	($ign,$ign,$ign,$ign,$ign,$id) = split(/\0/);
	%rec = &aid_db_unpack_rec($id,$DB{$id});
	$fullname = &aid_inorder_fullname(*rec);
	($affil,$ign) = &aid_affiliate(*rec,0);
	
	print "<li>";
	if ($rec{'v'})
	{
	    print "<a href=\"", &aid_about_path(*rec), 
	    "\">$fullname</a> $affil";
	    print " (<code>$rec{'e'}</code>)";
	}
	else
	{
	    print "<a href=\"", &aid_config('about_cgi'), 
	    "/", $rec{'id'}, "\">$fullname</a> $affil";
	    print " <em>(invalid e-mail address)</em>";
	}
	print "\n";
    }
    print "</ul>\n";
    &print_search_form($query_save, defined $in{'y'} ? $in{'y'} : '');
    print &aid_common_html_ftr(26);
}

flock(DB_FH, LOCK_UN);
undef $db;
untie(%DB);
close(DB_FH);

close(STDOUT);
exit(0);

sub print_search_form
{
    local($q,$y) = @_;
    local(@years);

    defined $DB{'_years'} || die "$dbmfile: missing _years\n";
    @years = unpack("n*",$DB{'_years'});
    push(@years, 'other');

    print "<center>\n",
      "<form method=\"get\" action=\"" . &aid_config('search_cgi') . "\">\n",
      "<input type=\"text\" name=\"q\" id=\"q\" size=\"25\" value=\"$q\">\n",
      "<select name=\"y\" id=\"y\">\n";
    print "<option";
    print " selected=\"selected\"" if '' eq $y;
    print " value=\"\">all years</option>\n";
    foreach (@years)
    {
	print "<option";
	print " selected=\"selected\"" if $_ eq $y;
	print ">$_" unless $_ eq 'other';
	print " value=\"other\">Faculty/Staff" if $_ eq 'other';
	print "</option>\n";
    }
    print "</select>\n";
    print "<input type=\"submit\" value=\"Search\">",
      "\n</form>\n</center>\n";

    1;
}
