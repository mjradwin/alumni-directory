#!/usr/local/bin/perl

#
#     FILE: mvhsaid.pl
#   AUTHOR: Michael J. Radwin
#    DESCR: MVHS Alumni Internet Directory CGI interface
#      $Id: mvhsaid,v 1.60 1998/01/05 20:58:32 mjr Exp mjr $
#

require 'aid_util.pl';
require 'cgi-lib.pl';

# configuration
$mailprog = &aid_config('mailprog');
$dbfile = &aid_config('wwwdir') . "master.adr";

@required_headers = ('id', 'last', 'first', 'school', 'year', 'email');

&ReadParse();

# convert "cgi-bin/mvhsaid/vcard/123.vcf" to "cgi-bin/mvhsaid?vcard=123"
if (defined($ENV{'PATH_INFO'}) && $ENV{'PATH_INFO'} =~ m,^/vcard/,) {
    $in{'vcard'} = $ENV{'PATH_INFO'};
    $in{'vcard'} =~ s,^/vcard/(\d+).*$,$1,;
}

$rcsid = '$Id: mvhsaid,v 1.60 1998/01/05 20:58:32 mjr Exp mjr $'; #'fnt

# special flags: version, update, vcard, about
#
# if any of these flags is set, we're sending back a dynamic page
# instead of processing a form request.
if (defined($in{'version'})) {
    select(STDOUT);  $| = 1;
    print "Content-type: text/plain\n\n$rcsid\n";
    print &aid_config('rcsid'), "\n";
    exit(0);

} elsif (defined($in{'update'})) {
    if ($in{'update'} =~ /^\d+$/) {
	@db = &aid_create_db($dbfile);
	if (defined($db[$in{'update'}])) {
	    %updateme = &aid_split($db[$in{'update'}]);
	    $updateme{'message'} = &aid_get_usertext($in{'update'});
	    &send_upd_real(*updateme,0);

	} else {
	    &send_upd_real(*aid_util'blank_entry,0);
	}
    } else {
	&send_upd_list();
    }
    exit(0);

} elsif (defined($in{'vcard'})) {
    if ($in{'vcard'} =~ /^\d+$/) {
	@db = &aid_create_db($dbfile);
	if (defined($db[$in{'vcard'}])) {
	    &send_vcard($db[$in{'vcard'}]);
	} else {
	    &send_upd_real(*aid_util'blank_entry,0);
	}
    } else {
	&send_upd_real(*aid_util'blank_entry,0);
    }
    exit(0);

} elsif (defined($in{'about'}) && $in{'about'} =~ /^\d+$/) {
    @db = &aid_create_db($dbfile);
    if (defined($db[$in{'about'}])) {
	&send_about($db[$in{'about'}]);
    } else {
	&send_upd_real(*aid_util'blank_entry,0);
    }
    exit(0);
}


# no special flags, so this should be a submission-processing request.
# did they access this with the right form?
foreach (@required_headers) {
    if (!defined($in{$_})) {
	# wrong form
	&send_upd_real(*aid_util'blank_entry,0);
	exit(0);
    }
}


# okay, we've got the right form.  clean up the input.
foreach $key (keys(%in)) {
    $in{$key} =~ s/^\s*//;  # get rid of leading and trailing whitespace
    $in{$key} =~ s/\s*$//;

    $in{$key} = '' if $in{$key} =~ m|^n/a$|i;
    $in{$key} = '' if $in{$key} =~ m|^none$|i;
    $in{$key} = '' if $in{$key} =~ m|^\(none\)$|i;
}

# remove apostropies and add a leading year to gradyear field
$in{'year'} =~ s/^class\s+of\s*//i;
$in{'year'} =~ s/^\'(\d\d)$/$1/;

# the MS approach to 2-digit year fields: either 35 years in the future,
# or 65 years in the past.
if ($in{'year'} =~ /^\d\d$/) {
#    ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
    $year = (localtime(time))[5];
    $year += 1900;  # localtime() returns number of years since 1900
    if ((($year % 100) - $in{'year'}) <= 65) {
	$year = int($year / 100);
	$in{'year'} = $year . $in{'year'};
    } else {
	$year = int($year / 100);
	$in{'year'} = ++$year . $in{'year'};
    }
}

#$in{'request'} = (defined($in{'request'})) ? 1 : 0;
$in{'school'} = ($in{'school'} eq 'Other' && $in{'sch_other'} ne '') ? 
    $in{'sch_other'} : $in{'school'};

# lowercase the hostname portion of the email address
if (!($in{'email'} =~ /^\s*$/)) {
    ($mail_user, $mail_addr) = split(/\@/, $in{'email'});
    $mail_addr = 'aol.com' if $mail_addr eq '';
	
    # test for initial-cap, rest lower user
    $lower_user = "\L$mail_user\E";
    $mail_user = $lower_user if $mail_user eq "\u$lower_user";

    # test for all-caps user
    $mail_user = $lower_user if $mail_user eq "\U$mail_user\E";

    $in{'email'} = $mail_user . '@' . "\L$mail_addr\E";
}

# uncapitalize those overzealous capslock names
$in{'first'} = "\L$in{'first'}\E" 
    if ($in{'first'} eq "\U$in{'first'}\E");
$in{'last'} = "\L$in{'last'}\E"
    if ($in{'last'} eq "\U$in{'last'}\E");
$in{'married'} = "\L$in{'married'}\E" 
    if ($in{'married'} eq "\U$in{'married'}\E");

# capitalize those lazy names
$in{'first'} = "\u$in{'first'}";
$in{'last'} = "\u$in{'last'}";
$in{'married'} = "\u$in{'married'}";

# did they check the "other" box for school, but not fill in any text?
if ($in{'school'} eq 'Other') {
    $in{'time'} = '';
    &send_upd_real(*in,1);
    exit(0);
}

# did they have non-blank entries for all the required fields?
foreach (@required_headers) {
    if ($in{$_} =~ /^\s*$/) {
	$in{'time'} = '';
	&send_upd_real(*in,1);
	exit(0);
    }
}

# now that the input is cleaned up, decide whether we're going to enter
# the confirmation phase or the queueing phase.

if (defined($in{'revise'})) {
    $in{'time'} = '';
    &send_upd_real(*in,0);
} elsif (defined($in{'confirmed'})) {
    &queue_submission();
} else {
    &confirm_submission();
}

exit(0);


sub confirm_submission {
    local($cgi_path) = &aid_config('cgi_path');

    # a little more cleanup and then update the db.
    $in{'homepage'} = '' if $in{'homepage'} eq 'http://';

    select(STDOUT);  $| = 1;
    print "Content-type: text/html\n\n";
    print &common_html_hdr(-1,1);

    print "<br>\n";
    print &aid_tableheader('Please confirm your submission');
    print "
<p>Please confirm that all of the below information is correct.  If you
have made any mistakes, select the <strong>&lt;&nbsp;Back</strong> button
to edit your entry.  If everything is correct, please hit the
<strong>Finish</strong> button.</p>\n";

    print "<form method=post action=\"$cgi_path\">\n";
    %newrec = &rec_html_entify(*in);
    foreach (keys %newrec) {
	print "<input type=hidden name=\"$_\" value=\"$newrec{$_}\">\n";
    }

    print "<table border=0><tr><td>\n";
    print &about_text(*in,1,1,0), "\n";
    print "</td></tr>\n";
    print "<tr><td align=right>\n";
    print "<input type=submit name=\"revise\" value=\"&lt; Back\">\n";
    print "&nbsp;\n";
    print "<input type=submit name=\"confirmed\" value=\"Finish\">\n";
    print "</td></tr></table>\n";
    print "</form>\n";
    print &common_html_ftr(-1);
}

sub queue_submission {
    require 'ctime.pl';

    # a little more cleanup and then update the db.
    $in{'homepage'} = '' if $in{'homepage'} eq 'http://';
    $in{'time'} = time;
    $in{'created'} = $in{'created'} ne '' ? $in{'created'} : $in{'time'};
    $in{'inethost'} = $ENV{'REMOTE_HOST'};
    $date = &ctime($in{'time'});
    $mailto = &aid_config('mailto');
    $mailsubj = &aid_config('mailsubj');
    $mailname = &aid_config('admin_name');
    $record = &aid_join(*in);

    $message_top = "Dear $mailname,\n\n" .
	"This was submitted to the Alumni Internet Directory:\n\n$record\n";

    $message_mid =
	(($in{'message'} eq '') ? '' :
	 "_AID_BEGIN_MESSAGE_\n$in{'message'}\n_AID_END_MESSAGE_\n");
    
    $message_bot =
"The kind soul who submitted it was using the web from $ENV{'REMOTE_HOST'}
Their browser is $ENV{'HTTP_USER_AGENT'}

Love,
the mvhsaid cgi-bin script
$date";

    system("$mailprog -s $mailsubj $mailto <<'EOM'
$message_top
$message_mid
$message_bot
EOM
");

    select(STDOUT);  $| = 1;
    print "Content-type: text/html\n\n";
    print &common_html_hdr(-1,1);

    print "<br>\n";
    print &aid_tableheader('Your submission is confirmed and queued');
    $fullname = &inorder_fullname(*in);
    print "<p>The entry for <strong>$fullname</strong> has been\n";
    print "added to the submission queue.\n";
    print "Email will be sent to <tt>$in{'email'}</tt> confirming\n";
    print "receipt of this submission when it it processed.</p>\n";

    print "<p>Processing your sumbission might take a day or two.\n";
    print "See <a href=\"" . &aid_config('master_path') . "tech.html#submit\">";
    print "tech notes</a> for behind-the-scenes details.</p>\n";

    print &common_html_ftr(-1);
}


sub send_upd_real {
    local(*rec,$blankp) = @_;

    select(STDOUT);  $| = 1;
    print "Content-type: text/html\n\n";

    print &common_html_hdr(-1,1);
    print &submit_body(*rec,$blankp);
    print &common_html_ftr(-1);
}

sub send_about {
    local($rawdata) = @_;
    local(%rec) = &aid_split($rawdata);
    local($fullname) = &inorder_fullname(*rec);

    $rec{'message'} = &aid_get_usertext($rec{'id'});

    select(STDOUT);  $| = 1;
    print "Content-type: text/html\n\n";
    print &common_html_hdr(-1,1);
    print "<br>\n";
    print &aid_tableheader($fullname);
    print "<p>Here is more detailed information about $fullname.  To see\n";
    print "<a href=\"" . &aid_config('cgi_path') . "/vcard/$rec{'id'}.vcf\">";
    print "$rec{'first'}'s vCard</a>,\n";
    print "you must be using Netscape 4 or have the \n";
    print "<a href=\"http://www.nowsoft.com/plugins/about_people.html\">";
    print "About People</a>\n";
    print "plugin installed.  To learn more about vCard, check out the\n";
    print "<a href=\"http://www.imc.org/pdi/\">Internet Mail Consortium</a>'s";
    print " website.\n\n";
    print &about_text(*rec,0,1,1), "\n";
    print &common_html_ftr(-1);
}

sub send_vcard {
    local($rawdata) = @_;
    local(%rec) = &aid_split($rawdata);

    $long_last  = $rec{'last'};
    $long_last .= " $rec{'married'}" if $rec{'married'} ne '';

    select(STDOUT);  $| = 1;
    print "Content-type: text/x-vCard\n\n";
    print "Begin:vCard\n";
    print "ORG:$rec{'school'};";
    if ($rec{'year'} =~ /^\d+$/) {
	print "Class of $rec{'year'}\n";
    } else {
	print "$rec{'year'}\n";
    }
    print "FN: $rec{'first'} $long_last\n";
    print "N:$rec{'last'};$rec{'first'};$rec{'married'}\n";
    print "EMAIL;PREF;INTERNET:$rec{'email'}\n";
    print "ADR:$rec{'location'}\n" if $rec{'location'} ne '';
    print "URL:$rec{'homepage'}\n" if $rec{'homepage'} ne '';
    print "End:vCard\n";
}


sub send_upd_list {
    local($_);
    local(@db) = &aid_alpha_db($dbfile);
    local($fullname,$affil,$len);
    local(%rec);

    select(STDOUT);  $| = 1;
    print "Content-type: text/html\n\n";
    print &common_html_hdr(-1,1);
    print "<br>\n";
    print &aid_tableheader('Update Your Directory Listing');
    print "\n";
    print "<p>Please select an entry to update from the list below.<p>\n";
    print "<pre>";
    print "Name and Graduation Year                  Email\n";
    print "---------------------------------------------------------------------------\n";

    foreach (@db) {
	next if $_ eq '';
	%rec = &aid_split($_);

	$fullname = &fullname(*rec);
	($affil,$len) = &affiliate(*rec,0);

	print "<a href=\"", &aid_config('cgi_path'), "?update=$rec{'id'}\">";
	print $fullname;
	print "</a>";
	print $affil;
	print ' ', ' ' x (41 - (length($fullname) + $len));
	print $rec{'email'};
	print "\n";
    }
    print "</pre>\n\n";
    print &common_html_ftr(-1);
}

sub panic {
    local($[) = 0;

    select(STDOUT);  $| = 1;
    print "Content-type: text/plain\n\n";
    print $_[0], "\n";

    exit;
}
