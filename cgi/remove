#!/usr/local/bin/perl -w

#
#     FILE: remove.pl
#   AUTHOR: Michael J. Radwin
#    DESCR: CGI for removal of e-mail address from staging DB
#      $Id: remove,v 6.3 2003/10/30 07:28:07 mradwin Exp mradwin $
#
# Copyright (c) 2005  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
    if ($0 =~ m,(.*[/\\]),) {
	unshift @INC, $1;
    } else {
	unshift @INC, '.';
    }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use CGI qw(-no_xhtml);
use CGI::Carp qw(fatalsToBrowser);
use aid_util;
use strict;

my %in;
my($q) = new CGI;
foreach my $key ($q->param())
{
    my($val) = $q->param($key);
    $val = '' unless defined $val;
    $in{$key} = $val;
}

my($key);
if (defined $in{'k'} && $in{'k'} !~ /^\s*$/)
{
    $key = uc($in{'k'});
}
else
{
    my($q) = $ENV{'QUERY_STRING'};
    $q =~ s/%([A-Fa-f0-9]{2})/pack("c",hex($1))/ge;
    if ($q =~ /^(\w+)$/)
    {
	$key = uc($q);
    }
}

if (defined $key)
{
    my $dbmfile = aid_util::config('staging');
    die "$dbmfile: $!\n" unless -r $dbmfile;

    my(%DB);
    tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
	or die "$dbmfile: $!\n";

    if (defined $DB{$key} && $DB{$key} =~ /^-?\d+\0/)
    {
	my($val) = $DB{$key};
	my($id,$packed) = split(/\0/, $val, 2);
	my %rec = aid_util::db_unpack_rec($id,$packed);

	if (defined($in{'confirm'}))
	{
	    $DB{$key} = "r\0";
	    untie(%DB);

	    print "Content-Type: text/html\015\012\015\012";
	    print aid_util::common_html_hdr(20,'E-mail address removed',1);

	    my $admin = aid_util::config('admin_email');
	    print "
<p>The Alumni Internet Directory entry for your e-mail address
<b>$rec{'e'}</b>
was removed sucessfully. We apologize for any
inconvenience this may have caused you.</p>

<p>If you need further assistance, contact
<a href=\"mailto:$admin\">$admin</a>.</p>
";
	}
	elsif (defined($in{'skip'}))
	{
	    untie(%DB);

	    print "Location: http://", 
	    aid_util::config('master_srv'), aid_util::config('master_path'),
	    "\015\012\015\012";

	    close(STDOUT);
	    exit(0);
	}
	else
	{
	    untie(%DB);

	    print "Content-Type: text/html\015\012\015\012";
	    print aid_util::common_html_hdr(20,'Remove user',1);

	    print "
<p>You are about to <b>permanently remove</b> the Alumni Internet
Directory entry which is using the e-mail address of:
<b>$rec{'e'}</b>.
If you did <b>not</b> request to be added to the Alumni Internet
Directory, you should remove this entry.</p>

<p><big>Are you are sure you want to <b>permanently remove</b> this
entry from the Directory?</big></p>

<form method=\"post\" action=\"" . aid_util::config('remove_cgi') . "\">
<input type=\"hidden\" name=\"k\" value=\"$key\">
<input type=\"submit\" name=\"confirm\" value=\" YES, Remove `$rec{'e'}' \">
&nbsp;&nbsp;&nbsp;&nbsp;
<input type=\"submit\" name=\"skip\" value=\" NO, Leave `$rec{'e'}' alone \">
</form>
";
	}

	print aid_util::common_html_ftr(20);

	close(STDOUT);
	exit(0);
    }
    elsif (defined $DB{$key} && $DB{$key} =~ /^[^\0]*\0$/)
    {
	print "Content-Type: text/html\015\012\015\012";
        print aid_util::common_html_hdr(20,'Already removed',1);

	print "<p>The removal code you entered\n",
	    "(<b>$key</b>) has already been processed.</p>\n";

	print aid_util::common_html_ftr(20);

	close(STDOUT);
	exit(0);
    }
    else
    {
	untie(%DB);

	print "Content-Type: text/html\015\012\015\012";
        print aid_util::common_html_hdr(20,'Remove user',1);

	$key =~ s/&/&amp;/g;
	$key =~ s/</&lt;/g;
	$key =~ s/>/&gt;/g;

	print "<p>Sorry, the verification code you entered\n",
	    "(<b>$key</b>) is invalid.</p>\n";
    }
}
else
{
    print "Content-Type: text/html\015\012\015\012";
    print aid_util::common_html_hdr(20,'Remove user',1);
}

print "<p>Please check your e-mail and find the 8-letter
removal code that was sent to you by the ",
aid_util::config('short_school'), "
Alumni Robot and enter it below.</p>

<form method=\"get\" action=\"" . aid_util::config('remove_cgi') . "\">
<label for=\"k\">Enter 8-letter code:</label>
&nbsp;
<input id=\"k\" type=\"text\" size=\"8\" maxlength=\"8\" name=\"k\" value=\"\">
&nbsp;
<input type=\"submit\" value=\"Submit removal code\">
</form>
";

print aid_util::common_html_ftr(20);

close(STDOUT);
exit(0);

