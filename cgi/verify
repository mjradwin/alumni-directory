#!/usr/local/bin/perl -w

#
#     FILE: verify.pl
#   AUTHOR: Michael J. Radwin
#    DESCR: CGI for verifcation of e-mail address
#      $Id: verify,v 6.3 2003/10/30 07:28:07 mradwin Exp mradwin $
#
# Copyright (c) 2005  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
    if ($0 =~ m,(.*[/\\]),) {
	unshift @INC, $1;
    } else {
	unshift @INC, '.';
    }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use CGI qw(-no_xhtml);
use CGI::Carp qw(fatalsToBrowser);
use aid_util;
use strict;

my %cgi;
my($q) = new CGI;
foreach my $key ($q->param())
{
    my($val) = $q->param($key);
    $val = '' unless defined $val;
    $cgi{$key} = $val;
}

$cgi{'e'} = '' unless defined $cgi{'e'};
$cgi{'id'} = '' unless defined $cgi{'id'};

$ENV{'QUERY_STRING'} =~ s/%([A-Fa-f0-9]{2})/pack("c",hex($1))/ge;
if ($ENV{'QUERY_STRING'} =~ /^(k=)?(\w+)$/)
{
    my($key8) = uc($2);
    &check_key8($key8);
}
elsif (defined $cgi{'k'} && $cgi{'k'} =~ /^\w+$/)
{
    &check_key8(uc($cgi{'k'}));
}
else
{
    print "Content-Type: text/html\015\012\015\012";
    print aid_util::common_html_hdr(20,'Enter verifcation code',1);
}

print "<p>Please check your e-mail and find the 8-letter
verification code that was sent to you by the ",
aid_util::config('short_school'), "
Alumni Robot and enter it below.</p>

<form method=\"get\" action=\"" . aid_util::config('verify_cgi') . "\">
<label for=\"k\">Enter 8-letter code:</label>
&nbsp;
<input id=\"k\" type=\"text\" size=\"8\" maxlength=\"8\" name=\"k\">
&nbsp;
<input id=\"e\" type=\"hidden\" name=\"e\" value=\"$cgi{'e'}\">
<input id=\"id\" type=\"hidden\" name=\"id\" value=\"$cgi{'id'}\">
<input type=\"submit\" value=\"Submit verification code\">
</form>
";

print aid_util::common_html_ftr(20);

close(STDOUT);
exit(0);

sub check_key8 {
    my($key) = @_;

    my $dbmfile = aid_util::config('staging');
    die "$dbmfile: $!\n" unless -r $dbmfile;

    my(%DB);
    tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
	or die "$dbmfile: $!\n";

    if (defined $DB{$key} && $DB{$key} =~ /^-?\d+\0/)
    {
	my($val) = $DB{$key};

	if (defined $DB{'_verified'})
	{
	    $DB{'_verified'} .= "\0" . $key
		unless $DB{'_verified'} =~ /\b$key\b/;
	}
	else
	{
	    $DB{'_verified'} = $key;
	}

	untie(%DB);

	my($id,$packed) = split(/\0/, $val, 2);
	my %rec = aid_util::db_unpack_rec($id,$packed);
	my $fullname = aid_util::inorder_fullname(\%rec);

	print "Content-Type: text/html\015\012\015\012";
	print aid_util::common_html_hdr(20,'E-mail address verified',1);

	$fullname = aid_util::html_entify_str($fullname);
	print "

<p>The listing for <strong>$fullname</strong> has been
accepted into the submission queue, and it will be processed
within 5 minutes. E-mail will be sent to
<b>$rec{'e'}</b>
confirming receipt of this submission when it it processed.</p>

Here is what your listing will look like:
<br><br>

<table border=\"1\" cellpadding=\"6\"><tr><td>";

	print aid_util::verbose_entry(\%rec,1,1,1);

	print "</td></tr></table>\n";
	print aid_util::config('html_ad');
	print aid_util::common_html_ftr(20);

	close(STDOUT);
	exit(0);
    }
    elsif (defined $DB{$key} && $DB{$key} =~ /^[^\0]*\0$/)
    {
	untie(%DB);

	print "Content-Type: text/html\015\012\015\012";
        print aid_util::common_html_hdr(20,'Already verified',1);

	print "<p>The verification code you entered\n",
	    "(<b>$key</b>) has already been processed.</p>\n";

	print aid_util::common_html_ftr(20);

	close(STDOUT);
	exit(0);
    }
    else
    {
	untie(%DB);

	print "Content-Type: text/html\015\012\015\012";
        print aid_util::common_html_hdr(20,'Invalid verifcation code',1);

	$key =~ s/&/&amp;/g;
	$key =~ s/</&lt;/g;
	$key =~ s/>/&gt;/g;

	print "<p>Sorry, the verification code you entered\n",
	    "(<b>$key</b>) is invalid.</p>\n";
    }
}
