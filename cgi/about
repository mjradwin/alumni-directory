#!/usr/bin/perl -w

#
#     FILE: about.pl
#   AUTHOR: Michael J. Radwin
#    DESCR: Alumni Internet Directory CGI "About" page generation
#      $Id: about,v 5.6 1999/06/22 18:59:59 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

require 'cgi-lib.pl';
require 'aid_util.pl';

$ENV{'PATH_INFO'} =~ s/\+/ /g;
$ENV{'PATH_INFO'} =~ s/%([A-Fa-f0-9]{2})/pack("c",hex($1))/ge;

if ($ENV{'PATH_INFO'} =~ m,/(\d+)$,)
{
    $id = $1;

    $dbmfile = &aid_config('dbmfile');
    $dbmfile =~ s/\.db$//;

    &CgiDie(&aid_config('short_school') . " Alumni: Script Error",
	    "The database is unreadable.\n" .
	    "Please <a href=\"mailto:" . &aid_config('admin_email') .
	    "\">e-mail " . &aid_config('admin_name') . "</a>.")
	unless -r "${dbmfile}.db";

    dbmopen(%DB,$dbmfile,0444);
    if (defined $DB{$id})
    {
	$val = $DB{$id};
	dbmclose(%DB);

	%rec = &aid_db_unpack_rec($id,$val);

	&send_about(*rec);
	close(STDOUT);
	exit(0);
    }
    else
    {
	dbmclose(%DB);
    }
}

$ENV{'PATH_INFO'} =~ s/&/&amp;/g;
$ENV{'PATH_INFO'} =~ s/</&lt;/g;
$ENV{'PATH_INFO'} =~ s/>/&gt;/g;

print "Status: 404 Not Found\015\012";
&CgiError(&aid_config('short_school') . " Alumni: Not Found",
	  "The alumnus " . $ENV{'PATH_INFO'} .
	  " you requested could not be found.\n");

close(STDOUT);
exit(0);

sub send_about
{
    local(*rec) = @_;
    local($fullname) = &aid_inorder_fullname(*rec);
    local($html_name) = &aid_html_entify_str($fullname);

    print "Last-Modified: ", &aid_http_date($rec{'u'}), "\015\012";
    print "Content-Type: text/html\015\012\015\012";

    print &aid_common_html_hdr(20,$fullname,1,$rec{'u'});
    print "<p>Below is the current listing for ${html_name}.\n";
    print "Click the modify button below to edit this listing.</p>\n";
    print "
<!-- borrowed from gamelan -->

<center>
<form method=\"get\" action=\"" . &aid_config('update_cgi') . "/$rec{'id'}\">
<input type=\"hidden\" name=\"upd\" value=\"$rec{'id'}\"${ht_empty_close_tag}
<input type=\"submit\" value=\"Modify $html_name\"${ht_empty_close_tag}
</form>
</center>

<p><small>To avoid malicious modification by other people passing
through, we mail the original user about the change (plus the new user
if the e-mail changes). The honor system has worked for us so far;
please don't abuse it and force us to install a password
door.</small></p>

";
    print "<p>Current listing:</p>\n\n";
    print &aid_about_text(*rec,0,1,1);
    print &aid_common_html_ftr(20,$rec{'u'});

    1;
}
