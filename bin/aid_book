#!/usr/bin/perl -w

#
# generates address books in several formats
# $Id: aid_book,v 3.13 1998/09/23 22:24:41 mradwin Exp mradwin $
#

require 'aid_util.pl';
require 'getopts.pl';

$usage = 'usage: aid_book [-h] infile.adr -{p,e,b,w,m,n,l,v} outfile
    -h        Display usage information.

    -p        Pine address book
    -e        Elm aliases
    -b        Berkeley Mail aliases
    -w        Eudora 2 nicknames
    -m        Eudora 3/4 nicknames
    -n        Netscape3 address book
    -l        Netscape4 .ldif address book
    -v        vCard book
';

# get the command-line options and die if there is a bad option or
# there are no filenames
&Getopts('hp:e:b:w:m:n:l:v:') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

# must have at least 1 option
die "$usage\n" unless
    $opt_p || $opt_e || $opt_b || $opt_w || 
    $opt_m || $opt_n || $opt_l || $opt_v;

open(DATA,$ARGV[0]) || die "Can't open $ARGV[0]: $!\n";

$opt_p && open(BOOKp,">$opt_p") || die "Can't open $opt_p: $!\n";
$opt_e && open(BOOKe,">$opt_e") || die "Can't open $opt_e: $!\n";
$opt_b && open(BOOKb,">$opt_b") || die "Can't open $opt_b: $!\n";
$opt_w && open(BOOKw,">$opt_w") || die "Can't open $opt_w: $!\n";
$opt_m && open(BOOKm,">$opt_m") || die "Can't open $opt_m: $!\n";
$opt_n && open(BOOKn,">$opt_n") || die "Can't open $opt_n: $!\n";
$opt_l && open(BOOKl,">$opt_l") || die "Can't open $opt_l: $!\n";
$opt_v && open(BOOKv,">$opt_v") || die "Can't open $opt_v: $!\n";

$opt_p && &write_prefix(*BOOKp,'p');
$opt_e && &write_prefix(*BOOKe,'e');
$opt_b && &write_prefix(*BOOKb,'b');
$opt_w && &write_prefix(*BOOKw,'w');
$opt_m && &write_prefix(*BOOKm,'m');
$opt_n && &write_prefix(*BOOKn,'n');
$opt_l && &write_prefix(*BOOKl,'l');
$opt_v && &write_prefix(*BOOKv,'v');

while(<DATA>) {
    chop;
    %rec = &aid_parse($_);
    next unless $rec{'valid'};
    
    $opt_p && &write_entry(*BOOKp,'p',*rec);
    $opt_e && &write_entry(*BOOKe,'e',*rec);
    $opt_b && &write_entry(*BOOKb,'b',*rec);
    $opt_w && &write_entry(*BOOKw,'w',*rec);
    $opt_m && &write_entry(*BOOKm,'m',*rec);
    $opt_n && &write_entry(*BOOKn,'n',*rec);
    $opt_l && &write_entry(*BOOKl,'l',*rec);
    $opt_v && &write_entry(*BOOKv,'v',*rec);
}

close(DATA);

$opt_p && &write_suffix(*BOOKp,'p');
$opt_e && &write_suffix(*BOOKe,'e');
$opt_b && &write_suffix(*BOOKb,'b');
$opt_w && &write_suffix(*BOOKw,'w');
$opt_m && &write_suffix(*BOOKm,'m');
$opt_n && &write_suffix(*BOOKn,'n');
$opt_l && &write_suffix(*BOOKl,'l');
$opt_v && &write_suffix(*BOOKv,'v');

$opt_p && close(BOOKp);
$opt_e && close(BOOKe);
$opt_b && close(BOOKb);
$opt_w && close(BOOKw);
$opt_m && close(BOOKm);
$opt_n && close(BOOKn);
$opt_l && close(BOOKl);
$opt_v && close(BOOKv);

exit(0);

sub write_prefix {
    local(*BOOK,$option) = @_;
    local($school) = &aid_config('school');

    # special case for netscape
    if ($option eq 'n') {
	print BOOK "<!DOCTYPE NETSCAPE-Addressbook-file-1>
<!-- This is an automatically generated file.
It will be read and overwritten.
Do Not Edit! -->
<TITLE>$school Alumni Address book</TITLE>
<H1>$school Alumni Address book</H1>

<DL><p>\n";
    }
}

sub write_entry {
    local(*BOOK,$option,*rec) = @_;
    local($long_last) = $rec{'last'};

    $long_last .= " $rec{'married'}" if $rec{'married'} ne '';

    $option eq 'p' && print BOOK "$rec{'alias'}\t$long_last, $rec{'first'}\t$rec{'email'}\t\t$rec{'school'} $rec{'year'}\n";
    $option eq 'e' && print BOOK "$rec{'alias'} = $long_last; $rec{'first'}, $rec{'school'} $rec{'year'} = $rec{'email'}\n";
    $option eq 'b' && print BOOK "alias $rec{'alias'}\t$rec{'email'}\n";
    $option eq 'w' && print BOOK "<$rec{'alias'}>\r\n>$rec{'first'} $long_last <$rec{'email'}>\r\n<$rec{'alias'}>\r\n>$rec{'school'} $rec{'year'}\r\n";
    $option eq 'm' && print BOOK "alias $rec{'alias'} $rec{'email'}\r\nnote $rec{'alias'} <name:$rec{'first'} $long_last>$rec{'school'} $rec{'year'}\r\n";

    # netscape is a bigger sucker
    if ($option eq 'n') {
	print BOOK "    <DT><A HREF=\"mailto:$rec{'email'}\" ";
	print BOOK "NICKNAME=\"$rec{'alias'}\">$rec{'first'} $long_last</A>\n";
	print BOOK "<DD>$rec{'school'} $rec{'year'}\n";
    }

    elsif ($option eq 'l') {
        print BOOK "dn: cn=$rec{'first'} $long_last,mail=$rec{'email'}\r\n";
	print BOOK "modifytimestamp: ";
	$vdate = &aid_vdate($rec{'time'});
	$vdate =~ s/T//;
	print BOOK "$vdate\r\n";
        print BOOK "cn: $rec{'first'} $long_last\r\n";
        print BOOK "sn: $long_last\r\n";
        print BOOK "givenname: $rec{'first'}\r\n";
        print BOOK "objectclass: top\r\nobjectclass: person\r\n";
        print BOOK "mail: $rec{'email'}\r\n";
        print BOOK "locality: $rec{'location'}\r\n" if $rec{'location'} ne '';
        print BOOK "o: $rec{'school'}\r\n";
	print BOOK "ou: $rec{'year'}\r\n";
        print BOOK "homeurl: $rec{'homepage'}\r\n" if $rec{'homepage'} ne '';
        print BOOK "xmozillanickname: $rec{'alias'}\r\n";
        print BOOK "\r\n";
    }
    
    # lots of data for a vCard
    elsif ($option eq 'v') {
	print BOOK &aid_vcard_text(*rec), "\r\n";
    }
}

sub write_suffix {
    local(*BOOK,$option) = @_;

    $option eq 'n' && print BOOK "</DL><p>\n";
}

