#!/usr/local/bin/perl -w

#
# generates address books in several formats
# $Id: aid_book,v 7.5 2006/03/30 23:19:10 mradwin Exp mradwin $
#
# Copyright (c) 2006  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}

use strict;
use Getopt::Std;
use aid_util;
use Symbol qw(gensym);

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-h] [-y year] -{p,e,b,w,m,n,l,v,o,t,T} outfile
    -h        Display usage information.

    -p        Pine address book
    -e        Elm aliases
    -b        Berkeley Mail aliases
    -w        Eudora 2 nicknames
    -m        Eudora 3/4 nicknames
    -n        Netscape3 address book
    -l        Netscape4 .ldif address book
    -v        vCard book
    -o        Outlook Express .csv
    -t        Plain text
    -T        Simple .TSV

    -y year   Only output for a given graduating class.
";

my @output_types = qw(p e b w m n l v o t T);

# get the command-line options and die if there is a bad option or
# there are no filenames
my %opts;
my $optstr = "hy:" . join(":", @output_types) . ":";
getopts($optstr, \%opts) || die "$usage\n";
$opts{'h'} && die "$usage\n";
@ARGV == 0 || die "$usage\n";

# must have at least 1 option
my $sum = 0;
foreach my $t (@output_types) {
    $sum++ if $opts{$t};
}
die "$usage\n" unless $sum;

my %fh;
foreach my $t (@output_types) {
    if ($opts{$t}) {
	my $fn = $opts{$t};
	$fh{$t} = Symbol::gensym();
	open($fh{$t}, ">$fn") || die "Can't open $fn: $!\n";
    }
}

foreach my $t (@output_types) {
    if ($opts{$t}) {
	aid_util::book_write_prefix($fh{$t}, $t);
    }
}


my $dbh = aid_util::db_connect();
my $where = $opts{'y'} ? "AND e.entry_gradclass = $opts{'y'}" : "";
my $DB = aid_util::load_records($dbh, $where);
$dbh->disconnect;

my @alpha_ids = sort { lc($DB->{$a}->{"sn"}) cmp lc($DB->{$b}->{"sn"})
		       || lc($DB->{$a}->{"gn"}) cmp lc($DB->{$b}->{"gn"})
		   } keys %{$DB};

foreach my $id (@alpha_ids)
{
    my $recp = $DB->{$id};
    next unless $recp->{'v'};
    next unless $recp->{'r'};

    if (!$recp->{"a"}) {
	$recp->{"a"} = aid_util::generate_alias($recp);
    }

    foreach my $t (@output_types) {
	if ($opts{$t}) {
	    aid_util::book_write_entry($fh{$t}, $t, $recp);
	  }
    }
}

undef $DB;

foreach my $t (@output_types) {
    if ($opts{$t}) {
	aid_util::book_write_suffix($fh{$t}, $t);
	close($fh{$t});
    }
}

exit(0);
