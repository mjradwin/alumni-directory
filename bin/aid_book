#!/usr/local/bin/perl -w

#
# generates address books in several formats
# $Id: aid_book,v 7.2 2006/02/27 16:58:37 mradwin Exp mradwin $
#
# Copyright (c) 2006  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}

use strict;
use Getopt::Std;
use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-h] [-y year] -{p,e,b,w,m,n,l,v,o} outfile
    -h        Display usage information.

    -p        Pine address book
    -e        Elm aliases
    -b        Berkeley Mail aliases
    -w        Eudora 2 nicknames
    -m        Eudora 3/4 nicknames
    -n        Netscape3 address book
    -l        Netscape4 .ldif address book
    -v        vCard book
    -o        Outlook Express .csv
    -t        Plain text

    -y year   Only output for a given graduating class.
";

# get the command-line options and die if there is a bad option or
# there are no filenames
my(%opts);
getopts('hp:e:b:w:m:n:l:v:o:y:t:', \%opts) || die "$usage\n";
$opts{'h'} && die "$usage\n";
@ARGV == 0 || die "$usage\n";

# must have at least 1 option
die "$usage\n" unless
    $opts{'t'} ||
    $opts{'p'} || $opts{'e'} || $opts{'b'} || $opts{'w'} || 
    $opts{'m'} || $opts{'n'} || $opts{'l'} || $opts{'v'} || $opts{'o'};

my($BOOKp,$BOOKe,$BOOKb,$BOOKw,$BOOKm,$BOOKn,$BOOKl,$BOOKv,$BOOKo);
my $BOOKt;

if ($opts{'p'}) {
    open($BOOKp,">$opts{'p'}") || die "Can't open $opts{'p'}: $!\n"; }
if ($opts{'e'}) {
    open($BOOKe,">$opts{'e'}") || die "Can't open $opts{'e'}: $!\n"; }
if ($opts{'b'}) { 
    open($BOOKb,">$opts{'b'}") || die "Can't open $opts{'b'}: $!\n"; }
if ($opts{'w'}) {
    open($BOOKw,">$opts{'w'}") || die "Can't open $opts{'w'}: $!\n"; }
if ($opts{'m'}) {
    open($BOOKm,">$opts{'m'}") || die "Can't open $opts{'m'}: $!\n"; }
if ($opts{'n'}) {
    open($BOOKn,">$opts{'n'}") || die "Can't open $opts{'n'}: $!\n"; }
if ($opts{'l'}) {
    open($BOOKl,">$opts{'l'}") || die "Can't open $opts{'l'}: $!\n"; }
if ($opts{'v'}) {
    open($BOOKv,">$opts{'v'}") || die "Can't open $opts{'v'}: $!\n"; }
if ($opts{'o'}) {
    open($BOOKo,">$opts{'o'}") || die "Can't open $opts{'o'}: $!\n"; }
if ($opts{'t'}) {
    open($BOOKt,">$opts{'t'}") || die "Can't open $opts{'t'}: $!\n"; }

$opts{'p'} && aid_util::book_write_prefix($BOOKp,'p');
$opts{'e'} && aid_util::book_write_prefix($BOOKe,'e');
$opts{'b'} && aid_util::book_write_prefix($BOOKb,'b');
$opts{'w'} && aid_util::book_write_prefix($BOOKw,'w');
$opts{'m'} && aid_util::book_write_prefix($BOOKm,'m');
$opts{'n'} && aid_util::book_write_prefix($BOOKn,'n');
$opts{'l'} && aid_util::book_write_prefix($BOOKl,'l');
$opts{'v'} && aid_util::book_write_prefix($BOOKv,'v');
$opts{'o'} && aid_util::book_write_prefix($BOOKo,'o');


my $dbh = aid_util::db_connect();
my $where = $opts{'y'} ? "AND e.entry_gradclass = $opts{'y'}" : "";
my $DB = aid_util::load_records($dbh, $where);
$dbh->disconnect;

my @alpha_ids = sort { lc($DB->{$a}->{"sn"}) cmp lc($DB->{$b}->{"sn"})
		       || lc($DB->{$a}->{"gn"}) cmp lc($DB->{$b}->{"gn"})
		   } keys %{$DB};

foreach my $id (@alpha_ids)
{
    my $recp = $DB->{$id};
    next unless $recp->{'v'};
    next unless $recp->{'r'};

    if (!$recp->{"a"}) {
	$recp->{"a"} = aid_util::generate_alias($recp);
    }

    $opts{'p'} && aid_util::book_write_entry($BOOKp,'p',$recp);
    $opts{'e'} && aid_util::book_write_entry($BOOKe,'e',$recp);
    $opts{'b'} && aid_util::book_write_entry($BOOKb,'b',$recp);
    $opts{'w'} && aid_util::book_write_entry($BOOKw,'w',$recp);
    $opts{'m'} && aid_util::book_write_entry($BOOKm,'m',$recp);
    $opts{'n'} && aid_util::book_write_entry($BOOKn,'n',$recp);
    $opts{'l'} && aid_util::book_write_entry($BOOKl,'l',$recp);
    $opts{'v'} && aid_util::book_write_entry($BOOKv,'v',$recp);
    $opts{'o'} && aid_util::book_write_entry($BOOKo,'o',$recp);
    $opts{'t'} && print $BOOKt $recp->{'e'}, "\n";
}

undef $DB;

$opts{'p'} && aid_util::book_write_suffix($BOOKp,'p');
$opts{'e'} && aid_util::book_write_suffix($BOOKe,'e');
$opts{'b'} && aid_util::book_write_suffix($BOOKb,'b');
$opts{'w'} && aid_util::book_write_suffix($BOOKw,'w');
$opts{'m'} && aid_util::book_write_suffix($BOOKm,'m');
$opts{'n'} && aid_util::book_write_suffix($BOOKn,'n');
$opts{'l'} && aid_util::book_write_suffix($BOOKl,'l');
$opts{'v'} && aid_util::book_write_suffix($BOOKv,'v');
$opts{'o'} && aid_util::book_write_suffix($BOOKo,'o');

$opts{'p'} && close($BOOKp);
$opts{'e'} && close($BOOKe);
$opts{'b'} && close($BOOKb);
$opts{'w'} && close($BOOKw);
$opts{'m'} && close($BOOKm);
$opts{'n'} && close($BOOKn);
$opts{'l'} && close($BOOKl);
$opts{'v'} && close($BOOKv);
$opts{'o'} && close($BOOKo);
$opts{'t'} && close($BOOKt);

exit(0);
