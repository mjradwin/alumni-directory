#!/usr/bin/perl -w

# $Id: aid_stats,v 1.12 1999/03/09 20:50:23 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

require 'aid_util.pl';
require 'ctime.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-h] infile.db outfile
    -h        Display usage information.
";

&Getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

$ARGV[0] =~ s/\.db$//;
die "can't open $ARGV[0].db\n" unless -r "$ARGV[0].db";
dbmopen(%DB,$ARGV[0],0444);

die "no __class__ key!\n" unless defined $DB{'__class__'};

open(FMTOUT,">$ARGV[1]") || die "Can't open $ARGV[1]: $!\n";

$nvalid = 0;
$ndubious = 0;
$ntotal = 0;
@nreq = (0, 0, 0, 0, 0);
$nreunion = 0;
$nlocation = 0;
$nweb = 0;
$nnews = 0;

while (($key,$val) = each %DB)
{
    next unless $key =~ /^\d+$/;

    %rec = &aid_db_unpack_rec($key,$val);

    $ntotal++;

    next unless $rec{'valid'};

    if ($rec{'bounce'} ne '0')
    {
	$ndubious++;
    }
    else
    {
	$nvalid++;
    }

    $nreq[$rec{'request'}]++;

    $nreunion++ if $rec{'reunion'};
    $nlocation++ if $rec{'location'} ne '';
    $nweb++ if $rec{'www'} ne '';
    $nnews++ if -f &aid_newsfile($rec{'id'});
}

$nlegit = $nvalid + $ndubious;


print FMTOUT "Mountain View High School Alumni Internet Directory\n";
print FMTOUT "Member Statistics\n";
print FMTOUT "------------------------------------------------------------------------\n\n";

printf FMTOUT "%4d       total entries in the Directory\n",
    $ntotal;
printf FMTOUT "%4d (%2.0f%%) members w/valid   e-mail address\n",
    $nlegit, ((100 * $nlegit) / $ntotal);
printf FMTOUT "%4d (%2.0f%%) members w/valid   e-mail address but bounced recently\n",
    $ndubious, ((100 * $ndubious) / $ntotal);

printf FMTOUT "%4d (%2.0f%%) members w/invalid e-mail address\n",
    ($ntotal - $nlegit), ((100 * ($ntotal - $nlegit)) / $ntotal);

printf FMTOUT "%4d (%2.0f%%) requesting quarterly digests:\n",
    ($nreq[1] + $nreq[2] + $nreq[3] + $nreq[4]),
    ((100 * ($nreq[1] + $nreq[2] + $nreq[3] + $nreq[4])) / $nlegit);

printf FMTOUT "    %4d - %s\n", $nreq[1], $aid_util'req_descr_long[1];
printf FMTOUT "    %4d - %s\n", $nreq[2], $aid_util'req_descr_long[2];
printf FMTOUT "    %4d - %s\n", $nreq[3], $aid_util'req_descr_long[3];
printf FMTOUT "    %4d - %s\n", $nreq[4], $aid_util'req_descr_long[4];

printf FMTOUT "%4d (%2.0f%%) allow class officers to mail reunion info\n",
    $nreunion, ((100 * $nreunion) / $nlegit);
printf FMTOUT "%4d (%2.0f%%) wrote some location info\n",
    $nlocation, ((100 * $nlocation) / $nlegit);
printf FMTOUT "%4d (%2.0f%%) have personal web page\n",
    $nweb, ((100 * $nweb) / $nlegit);
printf FMTOUT "%4d (%2.0f%%) wrote What's New? paragraph\n",
    $nnews, ((100 * $nnews) / $nlegit);

print FMTOUT "\n------------------------------------------------------------------------\n";
print FMTOUT &ctime(time);

close(FMTOUT);
dbmclose(%DB);
