#!/usr/local/bin/perl -w

# $Id: aid_reunion_create,v 1.4 2003/04/22 00:47:29 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

use lib "/pub/m/r/mradwin/private/lib/perl5/site_perl";
use DB_File::Lock;
use Getopt::Std;

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-h] reunions.db reunions.dat
    -h        Display usage information.
";

getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
defined $ARGV[0] || die "$usage\n";
defined $ARGV[1] || die "$usage\n";

$dbmfile = shift;

tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
    or die "$dbmfile: $!\n";

$infile = shift;
open(R,$infile) || die "$0: $infile: $!\n";

while(<R>)
{
    next unless /^begin:\s*(.+)\s*$/i;

    $class = $1;
    $date = $html = '';
    REUNION: while(<R>)
    {
	if (/^end:?\s*$/i)
	{
	    $DB{$class} = "$date\0$html"
		if ($date ne '' && $html ne '');
	    last REUNION;
	}

	if (/^date:\s*(.+)\s*$/i)
	{
	    $date = $1;
	    die "$infile:$.: bad date $date; aborting\n"
		if ($date !~ m,^\d{4}/\d{2}/\d{2}$, && $date ne "TBA");
	}
	elsif (/^html:/i)
	{
	    s/^html://i;
	    $html .= $_;
	    while(<R>)
	    {
		if (/^end:?\s*$/i)
		{
		    $DB{$class} = "$date\0$html"
			if ($date ne '' && $html ne '');
		    last REUNION;
		}

		$html .= $_;
	    }
	}
    }
}

$time = (stat(R))[9];
$DB{'_t'} = pack("N",$time);

close(R);
untie(%DB);
exit(0);

# avoid warnings
if ($^W && 0)
{
    $opt_h = $opt_h;
}
