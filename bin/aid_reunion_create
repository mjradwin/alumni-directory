#!/usr/local/bin/perl -w

# $Id: aid_reunion_create,v 6.2 2003/10/30 07:28:18 mradwin Exp mradwin $
#
# Copyright (c) 2003  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
use lib "/home/mradwin/local/share/perl";
use DB_File::Lock;
use Getopt::Std;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-h] reunions.db reunions.dat
    -h        Display usage information.
";

getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
defined $ARGV[0] || die "$usage\n";
defined $ARGV[1] || die "$usage\n";

$dbmfile = shift;

tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
    or die "$dbmfile: $!\n";

$infile = shift;
open(R,$infile) || die "$0: $infile: $!\n";

while(<R>)
{
    next unless /^begin:\s*(.+)\s*$/i;

    $class = $1;
    $date = $html = '';
    REUNION: while(<R>)
    {
	if (/^end:?\s*$/i)
	{
	    $DB{$class} = "$date\0$html"
		if ($date ne '' && $html ne '');
	    last REUNION;
	}

	if (/^date:\s*(.+)\s*$/i)
	{
	    $date = $1;
	    die "$infile:$.: bad date $date; aborting\n"
		if ($date !~ m,^\d{4}/\d{2}/\d{2}$, && $date ne "TBA");
	}
	elsif (/^html:/i)
	{
	    s/^html://i;
	    $html .= $_;
	    while(<R>)
	    {
		if (/^end:?\s*$/i)
		{
		    $DB{$class} = "$date\0$html"
			if ($date ne '' && $html ne '');
		    last REUNION;
		}

		$html .= $_;
	    }
	}
    }
}

$time = (stat(R))[9];
$DB{'_t'} = pack("N",$time);

close(R);
untie(%DB);
exit(0);

# avoid warnings
if ($^W && 0)
{
    $opt_h = $opt_h;
}
