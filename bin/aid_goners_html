#!/usr/bin/perl -w

#
# does the html version of the invalid address list
# $Id: aid_goners_html,v 3.17 1999/02/24 20:37:19 mradwin Exp mradwin $
#

require 'aid_util.pl';

$0 =~ s,.*/,,;  # basename
die "usage: $0 infile.db outfile.html\n" if !$ARGV[0] || !$ARGV[1];

$ARGV[0] =~ s/\.db$//;
die "can't open $ARGV[0].db\n" unless -r "$ARGV[0].db";
dbmopen(DB,$ARGV[0],0444);

die "no __alpha__ key!\n" unless defined $DB{'__alpha__'};

open(FMTOUT,">$ARGV[1]") || die "Can't open $ARGV[1]: $!\n";

print FMTOUT &common_html_hdr(-1,'Alumni with Invalid Addresses',1,
			      unpack("N",$DB{'__t_goner__'}));
print FMTOUT "
<p>The following addresses are invalid because either e-mail to them
bounces, or the address is being used by a new owner.  If you know a
current e-mail address for anyone on this list, please submit it!</p>
";
print FMTOUT "<pre>";
print FMTOUT "Name and Graduation Year                  Last known whereabouts\n";
print FMTOUT "---------------------------------------------------------------------------\n";

@alpha_ids = unpack("n*",$DB{'__alpha__'});
foreach $id (@alpha_ids)
{
    %rec = &aid_db_unpack_rec($id,$DB{$id});
    next unless $rec{'valid'} == 0;

    $rec{'email'} =~ s/^[^\@]+\@/\@/;

    $fullname = &fullname(*rec);
    ($affil,$len) = &affiliate(*rec,0);

    print FMTOUT "<a href=\"", &aid_config('goners_cgi'), "?update=$rec{'id'}\">";
    print FMTOUT $fullname;
    print FMTOUT "</a>";
    print FMTOUT $affil;
    print FMTOUT ' ', ' ' x (41 - (length($fullname) + $len));
    print FMTOUT $rec{'email'};
    print FMTOUT "\n";
}

print FMTOUT "</pre>\n";
print FMTOUT &common_html_ftr(-1, "Invalid&nbsp;Addresses");

dbmclose(DB);
exit(0);
