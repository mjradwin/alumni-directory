#!/usr/local/bin/perl5 -w

#
# does the html version of the invalid address list
# $Id: aid_goners_html,v 5.6 1999/06/29 01:08:09 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-h] [-i <keys>] infile.db outfile.html
    -h        Display usage information.
    -i <keys> Incremental update only for list of keys.
";

&Getopts('hi:') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

@incremental = ($opt_i ? split(/[,\s]+/, $opt_i) : ());

if (@incremental && (! grep(/_t_goner/, @incremental)))
{
    print STDOUT "incremental goners avoided; no _t_goner key.\n";
    exit(0);
}

$ARGV[0] =~ s/\.db$//;
die "can't open $ARGV[0].db\n" unless -r "$ARGV[0].db";
dbmopen(%DB,$ARGV[0],0444);

die "corrupt/missing _alpha key!"
    unless defined $DB{'_alpha'} && $DB{'_alpha'} ne '';
die "corrupt/missing _t_goner key!"
    unless defined $DB{'_t_goner'} && $DB{'_t_goner'} ne '';

open(FMTOUT,">$ARGV[1]") || die "Can't open $ARGV[1]: $!\n";

$time = unpack("N",$DB{'_t_goner'});
print FMTOUT &aid_common_html_hdr(-1,'Alumni with Invalid Addresses',1,$time);
print FMTOUT "
<p>The following addresses are invalid because either e-mail to them
bounces, or the address is being used by a new owner.  If you know a
current e-mail address for anyone on this list, please submit it!</p>
";
print FMTOUT "<pre>";
print FMTOUT "Name and Graduation Year                  Last known whereabouts\n";
print FMTOUT "---------------------------------------------------------------------------\n";

@alpha_ids = unpack("n*",$DB{'_alpha'});
foreach $id (@alpha_ids)
{
    %rec = &aid_db_unpack_rec($id,$DB{$id});
    next unless $rec{'v'} == 0;

    $rec{'e'} =~ s/^[^\@]+\@/\@/;

    $fullname = &aid_fullname(*rec);
    ($affil,$len) = &aid_affiliate(*rec,0);

    print FMTOUT "<a href=\"", &aid_config('goners_cgi'), "?upd=$rec{'id'}\">";
    print FMTOUT $fullname;
    print FMTOUT "</a>";
    print FMTOUT $affil;
    print FMTOUT ' ', ' ' x (41 - (length($fullname) + $len));
    print FMTOUT $rec{'e'};
    print FMTOUT "\n";
}

print FMTOUT "</pre>\n";
print FMTOUT &aid_common_html_ftr(-1,$time);

dbmclose(%DB);
close(FMTOUT);
utime $time, $time, $ARGV[1];

# touch timestamp
$now = time;
$ts = $ARGV[1];
$ts =~ s,([^/]+)$,\.$1,;
open(TS,">$ts") && close(TS);
utime $now, $now, $ts;

exit(0);
