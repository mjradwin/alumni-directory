#!/usr/local/bin/perl -w

# $Id: aid_dbm_create,v 1.8 2003/03/14 23:30:26 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

use lib "/pub/m/r/mradwin/private/lib/perl5/site_perl";
use DB_File::Lock;
use Config::IniFiles;

require 'aid_util.pl';
use Getopt::Std;

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-hq] outfile.db infile.ini
    -h        Display usage information.
    -q        Quiet.
";

getopts('hq') || die "$usage\n";
$opt_h && die "$usage\n";
defined $ARGV[0] || die "$usage\n";
defined $ARGV[1] || die "$usage\n";

$dbmfile = shift;

tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
    or die "$dbmfile: $!\n";

unless ($opt_q)
{
    select(STDOUT); $| = 1;
}

$infile = shift;

print STDOUT "$0: loading $infile..." unless $opt_q;
my($data) = new Config::IniFiles(-file => $infile);
print STDOUT "done.\n" unless $opt_q;

print STDOUT "$0: writing primary data..." unless $opt_q;
$j = 0;
foreach my $section ($data->Sections())
{
    %rec = ();

    foreach my $key (@aid_edit_field_names)
    {
	my $val = $data->val($section, $key);
	if (defined $val)
	{
	    $rec{$key} = $val;
	}
	else
	{
	    $rec{$key} = '';
	}
    }

    my $note = $data->val($section, 'n');
    if (defined $note)
    {
	$rec{'n'} = &aid_url_unescape($note);
    }
    else
    {
	$rec{'n'} = '';
    }

    if (! defined $rec{'id'})
    {
	warn "$infile:$section: missing id\n";
	next;
    }

    $rec{'a'} = &aid_generate_alias(*rec)
	unless (defined $rec{'a'} && $rec{'a'} ne '');

    $DB{$rec{'id'}} = &aid_db_pack_rec(*rec);
    my $email = $rec{'e'};
    $DB{"\L$email\E"} = pack('n', $rec{'id'});

    print STDOUT "." if !$opt_q && ($j++ % 20) == 0;
}

print STDOUT "\n" unless $opt_q;

&aid_rebuild_secondary_keys(\%DB,$opt_q,0,0);

untie(%DB);

print STDOUT "$0: build successful\n" unless $opt_q;
exit(0);

# avoid warnings
if ($^W && 0)
{
    $opt_h = $opt_h;
    @aid_edit_field_names = ();
}
