#!/usr/local/bin/perl5 -w

#
# does the html version of the grad-date address list
# $Id: aid_class_html,v 5.18 2000/06/05 17:11:17 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

use DB_File;

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-hqtwd] [-c class] [-i <keys>] infile.db outfile
    -h        Display usage information.
    -q        Quiet.
    -t        Output text only.
    -w        Web page mode.
    -d        Add email disclaimer.
    -c class  Only people from <class>.
    -i <keys> Incremental update only for list of keys.
";

&Getopts('hqtwc:i:d') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";

@incremental = ($opt_i ? split(/[,\s]+/, $opt_i) : ());

if (@incremental && $opt_w && (! grep(/_t_www/, @incremental)))
{
    print STDOUT "incremental www avoided; no _t_www key.\n"
	unless $opt_q;
    exit(0);
}

$dbmfile = shift;
tie(%DB, 'DB_File', $dbmfile, O_RDONLY, 0444, $DB_File::DB_HASH)
    or die "$dbmfile: $!\n";

$prefix = $opt_w ? 'www_' : '';
$affix = $opt_w ? '_www' : '';
$title  = $opt_w ? 'Alumni with Web Pages' : 'Listed by Graduating Class';
$pageno = $opt_w ? 4 : -1;

if ($opt_c)
{
    die "corrupt/missing _${prefix}${opt_c} key!"
	unless defined $DB{"_${prefix}${opt_c}"} && 
	    $DB{"_${prefix}${opt_c}"} ne '';
    @years = ($opt_c);
}
else
{
    die "missing _${prefix}years key!"
	unless defined $DB{"_${prefix}years"};
    if ($DB{"_${prefix}years"} eq '')
    {
	@years = ();
    }
    else
    {
	@years = unpack("n*",$DB{"_${prefix}years"});
	push(@years, 'other')
	    if defined $DB{"_${prefix}other"} && $DB{"_${prefix}other"} ne '';
    }
}

$outfile = shift;
open(FMTOUT,">$outfile") || die "Can't open $outfile: $!\n";

if (!$opt_t) {
    die "corrupt/missing _t${affix} key!"
	unless defined $DB{"_t${affix}"} && $DB{"_t${affix}"} ne '';
    $time = unpack("N",$DB{"_t${affix}"});

    print FMTOUT &aid_common_html_hdr($pageno,$title,1,$time);
    print FMTOUT &aid_common_intro_para(0);
    print FMTOUT &aid_class_jump_bar('#grad','',*years,1);
}

if ($opt_d)
{
    print FMTOUT "The following information is provided solely for the
information of the " . &aid_config('school') . " community.
Any redistribution outside of this community, or
solicitation of business or contributions
from individuals listed below is forbidden.

";
}

if ($opt_c)
{
    die "corrupt/missing _t_${opt_c} key!"
	unless defined $DB{"_t_${opt_c}"} && $DB{"_t_${opt_c}"} ne '';
    $time = unpack("N",$DB{"_t_${opt_c}"});

    if ($opt_c =~ /^\d+$/)
    {
	print FMTOUT "Class of $opt_c";
    }
    else
    {
	print FMTOUT "Faculty/Staff";
    }

    print FMTOUT "  (Last updated ", &aid_caldate($time), ")\n\n";
}

if ($opt_t)
{
    print FMTOUT "Name                                     E-Mail\n";
    print FMTOUT "---------------------------------------------------------------------------";
}

select(STDOUT); $| = 1;
$prev = '1900';
foreach $year (@years)
{
    die "corrupt/missing ${prefix}${year} key!"
	unless defined $DB{"_${prefix}${year}"} &&
	    $DB{"_${prefix}${year}"} ne '';
    @ids = unpack("n*",$DB{"_${prefix}${year}"});

    print STDOUT "." unless $opt_q;
    print FMTOUT "\n";
    if ($year =~ /^\d+$/)
    {
	if (!$opt_c)
	{
	    $opt_t || print FMTOUT "<a name=\"grad${year}\" " .
		"href=\"" . &aid_config('master_path') . "class/${year}.html\">";
	    print FMTOUT "Class of $year";
	    $opt_t || print FMTOUT "</a>";
	    print FMTOUT "\n";
	    $opt_t || print FMTOUT "<ul>\n";
	}
	$prev = $year;
    }
    else
    {
	if (!$opt_c)
	{
	    $opt_t || print FMTOUT "<a name=\"gradother\" " .
		"href=\"" . &aid_config('master_path') . "class/other.html\">"
		    if $prev =~ /^\d+$/;
	    print FMTOUT "Faculty/Staff";
	    $opt_t || print FMTOUT "</a>" if $prev =~ /^\d+$/;
	    print FMTOUT ' ' x (13 - length("Faculty/Staff"));
	    print FMTOUT "\n";
	    $opt_t || print FMTOUT "<ul>\n";
	}
	$prev = $year;
    }

    foreach $id (@ids)
    {
	%rec = &aid_db_unpack_rec($id,$DB{$id});
	next unless $rec{'v'};

	$fullname = &aid_fullname(*rec);

	print FMTOUT ' ';
	$opt_t || print FMTOUT "<li><a href=\"" . &aid_about_path(*rec) . "\">";
	print FMTOUT $fullname;
	$opt_t || print FMTOUT "</a>";
	$opt_t && print FMTOUT ' ', ' ' x (39 - (length($fullname))), $rec{'e'};
	$opt_t || print FMTOUT &aid_is_new_html(*rec);
	print FMTOUT "\n";
    }

    $opt_t || print FMTOUT "</ul>\n";
}
print STDOUT "\n" unless $opt_q;

$opt_t || print FMTOUT &aid_common_html_ftr($pageno,$time);

untie(%DB);
close(FMTOUT);
utime $time, $time, $outfile unless $opt_t;

# touch timestamp
$now = time;
$ts = $outfile;
$ts =~ s,([^/]+)$,\.$1,;
open(TS,">$ts") && close(TS);
utime $now, $now, $ts;

exit(0);

if ($^W && 0)
{
    $opt_h = $opt_d = 0;	# avoid warning
}
