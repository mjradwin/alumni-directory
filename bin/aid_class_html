#!/usr/local/bin/perl -w

#
# does the html version of the grad-date address list
# $Id: aid_class_html,v 6.3 2003/10/30 07:28:18 mradwin Exp mradwin $
#
# Copyright (c) 2003  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use Getopt::Std;
use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-hqtwd] [-c class] [-i <keys>] infile.db outfile
    -h        Display usage information.
    -q        Quiet.
    -t        Output text only.
    -w        Web page mode.
    -d        Add email disclaimer.
    -c class  Only people from <class>.
    -i <keys> Incremental update only for list of keys.
";

getopts('hqtwc:i:d') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";

@incremental = ($opt_i ? split(/[,\s]+/, $opt_i) : ());

if (@incremental && $opt_w && (! grep(/_t_www/, @incremental)))
{
    print STDOUT "incremental www avoided; no _t_www key.\n"
	unless $opt_q;
    exit(0);
}

$dbmfile = shift;
tie(%DB, 'DB_File::Lock', $dbmfile, O_RDONLY, 0444, $DB_HASH, 'read')
    or die "$dbmfile: $!\n";

$prefix = $opt_w ? 'www_' : '';
$affix = $opt_w ? '_www' : '';
$title  = $opt_w ? 'Alumni with Web Pages' : 'Listed by Graduating Class';
$pageno = $opt_w ? 4 : -1;

if ($opt_c)
{
    die "corrupt/missing _${prefix}${opt_c} key!"
	unless defined $DB{"_${prefix}${opt_c}"} && 
	    $DB{"_${prefix}${opt_c}"} ne '';
    @years = ($opt_c);
}
else
{
    die "missing _${prefix}years key!"
	unless defined $DB{"_${prefix}years"};
    if ($DB{"_${prefix}years"} eq '')
    {
	@years = ();
    }
    else
    {
	@years = unpack("n*",$DB{"_${prefix}years"});
	push(@years, 'other')
	    if defined $DB{"_${prefix}other"} && $DB{"_${prefix}other"} ne '';
    }
}

$outfile = shift;
open(FMTOUT,">$outfile") || die "Can't open $outfile: $!\n";

if (!$opt_t) {
    die "corrupt/missing _t${affix} key!"
	unless defined $DB{"_t${affix}"} && $DB{"_t${affix}"} ne '';
    $time = unpack("N",$DB{"_t${affix}"});

    print FMTOUT aid_util::common_html_hdr($pageno,$title,1,$time);
    print FMTOUT aid_util::common_intro_para(0);
    print FMTOUT aid_util::class_jump_bar('#grad','',\@years,1);
}

if ($opt_d)
{
    print FMTOUT "The following information is provided solely for the
information of the " . aid_util::config('school') . " community.
Any redistribution outside of this community, or
solicitation of business or contributions
from individuals listed below is forbidden.

";
}

if ($opt_c)
{
    die "corrupt/missing _t_${opt_c} key!"
	unless defined $DB{"_t_${opt_c}"} && $DB{"_t_${opt_c}"} ne '';
    $time = unpack("N",$DB{"_t_${opt_c}"});

    if ($opt_c =~ /^\d+$/)
    {
	print FMTOUT "Class of $opt_c";
    }
    else
    {
	print FMTOUT "Faculty/Staff";
    }

    print FMTOUT "  (Last updated ", aid_util::caldate($time), ")\n\n";
}

if ($opt_t)
{
    print FMTOUT "Name                                     E-Mail\n";
    print FMTOUT "---------------------------------------------------------------------------";
}

select(STDOUT); $| = 1;
$prev = '1900';
foreach $year (@years)
{
    die "corrupt/missing ${prefix}${year} key!"
	unless defined $DB{"_${prefix}${year}"} &&
	    $DB{"_${prefix}${year}"} ne '';
    @ids = unpack("n*",$DB{"_${prefix}${year}"});

    print STDOUT "." unless $opt_q;
    print FMTOUT "\n";
    if ($year =~ /^\d+$/)
    {
	if (!$opt_c)
	{
	    $opt_t || print FMTOUT "<a name=\"grad${year}\" " .
		"href=\"" . aid_util::config('master_path') . "class/${year}.html\">";
	    print FMTOUT "Class of $year";
	    $opt_t || print FMTOUT "</a>";
	    print FMTOUT "\n";
	    $opt_t || print FMTOUT "<ul>\n";
	}
	$prev = $year;
    }
    else
    {
	if (!$opt_c)
	{
	    $opt_t || print FMTOUT "<a name=\"gradother\" " .
		"href=\"" . aid_util::config('master_path') . "class/other.html\">"
		    if $prev =~ /^\d+$/;
	    print FMTOUT "Faculty/Staff";
	    $opt_t || print FMTOUT "</a>" if $prev =~ /^\d+$/;
	    print FMTOUT ' ' x (13 - length("Faculty/Staff"));
	    print FMTOUT "\n";
	    $opt_t || print FMTOUT "<ul>\n";
	}
	$prev = $year;
    }

    foreach my $id (@ids)
    {
	my %rec = aid_util::db_unpack_rec($id,$DB{$id});
	next unless $rec{'v'};

	$fullname = aid_util::fullname(\%rec);

	print FMTOUT ' ';
	$opt_t || print FMTOUT "<li><a href=\"" . aid_util::about_path(\%rec) . "\">";
	print FMTOUT $fullname;
	$opt_t || print FMTOUT "</a>";
	$opt_t && print FMTOUT ' ', ' ' x (39 - (length($fullname))), $rec{'e'};
	$opt_t || print FMTOUT aid_util::is_new_html(\%rec);
	print FMTOUT "\n";
    }

    $opt_t || print FMTOUT "</ul>\n";
}
print STDOUT "\n" unless $opt_q;

$opt_t || print FMTOUT aid_util::common_html_ftr($pageno,$time);

untie(%DB);
close(FMTOUT);
utime $time, $time, $outfile unless $opt_t;

# touch timestamp
$now = time;
$ts = $outfile;
$ts =~ s,([^/]+)$,\.$1,;
open(TS,">$ts") && close(TS);
utime $now, $now, $ts;

exit(0);

if ($^W && 0)
{
    $opt_h = $opt_d = 0;	# avoid warning
}
