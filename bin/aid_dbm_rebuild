#!/usr/local/bin/perl -w

# $Id: aid_dbm_rebuild,v 6.4 2003/10/30 07:28:18 mradwin Exp mradwin $
#
# Copyright (c) 2003  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use Getopt::Std;
use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-hqa] infile.db outfile.db
    -h        Display usage information.
    -a        Rebuild aliases, too.
    -q        Quiet.
";

getopts('hqa') || die "$usage\n";
$opt_h && die "$usage\n";
defined $ARGV[0] || die "$usage\n";
defined $ARGV[1] || die "$usage\n";

$in_dbmfile = shift;
tie(%OLDDB, 'DB_File::Lock', $in_dbmfile, O_RDONLY, 0444, $DB_HASH, 'read')
    or die "$in_dbmfile: $!\n";

$dbmfile = shift;
tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
    or die "$dbmfile: $!\n";

my(%aliases);
while (my($key,$val) = each(%OLDDB))
{
    next unless $key =~ /^\d+$/;

    my %rec = aid_util::db_unpack_rec($key,$val);
    $rec{'a'} = '' if ($opt_a);

    if (defined $rec{'a'} && $rec{'a'} ne '') {
	$aliases{$key} = $rec{'a'};
    } else {
	$aliases{$key} = aid_util::generate_alias(\%rec);
    }
}

while (my($key,$val) = each(%OLDDB))
{
    next unless $key =~ /^\d+$/;

    my %rec = aid_util::db_unpack_rec($key,$val);

    foreach (@aid_util::edit_field_names)
    {
	$rec{$_} = '' unless defined $rec{$_};
    }

    $rec{'a'} = $aliases{$rec{'id'}};
    $DB{$rec{'id'}} = aid_util::db_pack_rec(\%rec);
    $email = $rec{'e'};
    $DB{"\L$email\E"} = pack('n', $rec{'id'});
}

untie(%OLDDB);

aid_util::rebuild_secondary_keys(\%DB,$opt_q,0,0);

untie(%DB);

print STDOUT "$0: build successful\n" unless $opt_q;
exit(0);

# avoid warnings
if ($^W && 0)
{
    $opt_h = $opt_h;
    $opt_a = $opt_a;
}
