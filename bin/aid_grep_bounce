#!/usr/local/bin/perl -w

# $Id: aid_grep_bounce,v 6.3 2003/10/30 07:28:18 mradwin Exp mradwin $
#
# Copyright (c) 2003  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

use lib "/home/mradwin/local/share/perl";
use DB_File::Lock;

use aid_util;

$spoolfile = $ARGV[0] ? $ARGV[0] : aid_util::config('spoolfile');

$directory_name = aid_util::config('short_school') . ' Alumni Internet Directory';
$from_pattern = aid_util::config('admin_name') .
    ' <' . aid_util::config('admin_email') . '>';

%bouncers = ();
&readspool($spoolfile);
foreach(sort keys %bouncers)
{
    print $_, " ";
}
print "\n";

sub readspool {
    my($spoolFile) = @_;
    local($_,*SPOOL);

    open(SPOOL, $spoolFile) || die "can't open $spoolFile: $!\n";
    select(STDOUT); $| = 1;
    print STDERR "reading spool...\n";
    while(<SPOOL>) {
	if (/^\s*-+\s+The following addresses had permanent fatal errors\s+-+\s*$/)
	{

	    $_ = <SPOOL>;
	    
	    s/^[^<]*//;
	    s/^<//;
	    s/\s*$//;
	    s/>$//;

	    $bouncers{"\L$_\E"} = 1;
	}
	elsif (/^\s*>*\s*E-mail\s+: /)
	{
	    s/^\s*>*\s*E-mail\s+: //;
	    s/\s*$//;
	    $bouncers{"\L$_\E"} = 1;
	}
	elsif (/^\s*>*\s*From: $from_pattern/o)
	{
	    $_ = <SPOOL>;
	    if (/To:.*<([^>]+)>/)
	    {
		$bouncers{"\L$1\E"} = 1;
	    }
	}
	elsif (/^\s*>*\s*Subject: $directory_name \[.+-(\d+)\]/o)
	{
	    $bouncers{$1} = 1;
	}
    }
}
