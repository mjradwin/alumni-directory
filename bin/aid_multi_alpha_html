#!/usr/bin/perl -w

#
# does the html verbose pages
# $Id: aid_multi_alpha_html,v 5.5 1999/06/08 21:54:43 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-h] infile.db
    -h        Display usage information.
";

&Getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

$ARGV[0] =~ s/\.db$//;
die "can't open $ARGV[0].db\n" unless -r "$ARGV[0].db";
dbmopen(%DB,$ARGV[0],0444);

die "no _alpha key!\n" unless defined $DB{'_alpha'};

@initials = ();
for ($initial = 'a'; $initial ne 'aa'; $initial++)
{
    push(@initials, $initial) if defined $DB{"_t_${initial}"};
}

$opened = 0;
$initial = "Z";

select(STDOUT); $| = 1;
@alpha_ids = unpack("n*",$DB{'_alpha'});
foreach $id (@alpha_ids)
{
    %rec = &aid_db_unpack_rec($id,$DB{$id});
    next unless $rec{'v'};

    $cur_initial = substr($rec{'sn'}, 0, 1);
    $cur_initial = "\U${cur_initial}\E";
    if ("\U${initial}\E" ne $cur_initial) {
	print STDOUT ".";
        $initial = $cur_initial;

	if ($opened)
	{
	    print FMTOUT "</pre>\n";
	    print FMTOUT &aid_common_html_ftr(1,$time);
	    close(FMTOUT);
	    utime $time, $time, $outFile;
	}

	$outFile = &aid_config('wwwdir') . "alpha/\L${initial}\E-index.html";
	open(FMTOUT,">$outFile") || die "Can't open $outFile: $!\n";
	$opened = 1;

	die "no alpha time key!\n" unless defined $DB{"\L_t_${initial}\E"};
	$time = unpack("N",$DB{"\L_t_${initial}\E"});

	print FMTOUT &aid_common_html_hdr(1,"`$initial' Alumni",1,$time),
	    &aid_common_intro_para(1),
	    "<p>\n", &alpha_jump_bar($initial), "</p>\n",
	    "<hr noshade=\"noshade\" size=\"1\"${ht_empty_close_tag}\n\n";

	print FMTOUT "<pre>";
    }

    print FMTOUT &html_pre_entry(*rec,'',1);
}
print STDOUT "\n";

if ($opened)
{
    print FMTOUT "</pre>\n";
    print FMTOUT &aid_common_html_ftr(1,$time);
    close(FMTOUT);
    utime $time, $time, $outFile;
}

# index page
die "no _t key!\n" unless defined $DB{'_t'};
$time = unpack("N",$DB{'_t'});
$outFile = &aid_config('wwwdir') . "alpha/index.html";
open(FMTOUT,">$outFile") || die "Can't open $outFile: $!\n";

print FMTOUT &aid_common_html_hdr(-1,'Alphabetically',0,$time);

print FMTOUT "<p align=\"center\"><big>\n";
print FMTOUT &alpha_jump_bar('');
print FMTOUT "</big></p>\n\n";

print FMTOUT &aid_common_html_ftr(-1,$time);
close(FMTOUT);
utime $time, $time, $outFile;
dbmclose(%DB);

# touch timestamp
$now = time;
$ts = $outFile;
$ts =~ s,([^/]+)$,\.$1,;
open(TS,">$ts") && close(TS);
utime $now, $now, $ts;

exit(0);


sub html_pre_entry {
    local(*rec,$a_name,$do_html_p) = @_;
    local($fullname,$affil,$len,$needsanchor);
    local($info_gif) = &aid_image_tag('info');
    local($retval);

    $fullname = &aid_fullname(*rec);
    ($affil,$len) = &aid_affiliate(*rec,0);
    $needsanchor = ($do_html_p && (($a_name ne '') ||
				   ($rec{'w'} ne ''))) ? 1 : 0;
    $retval = '';
    $retval .= "<a href=\"" . &aid_about_path(*rec) . "\">$info_gif</a> " #'#
	if $do_html_p;
    $retval .= "<a" if $needsanchor;
    $retval .= " name=\"$a_name\"" if ($do_html_p && $a_name ne '');
    $retval .= " href=\"$rec{'w'}\"" if ($do_html_p && $rec{'w'} ne '');
    $retval .= ">" if $needsanchor;
    $retval .= $fullname;
    $retval .= "</a>" if $needsanchor;
    $retval .= $affil;
    $retval .= ' ' . ' ' x (41 - (length($fullname) + $len));
    $retval .= "<a href=\"mailto:" . $rec{'e'} . "\">" if $do_html_p;
    $retval .= $rec{'e'};
    $retval .= "</a>" if $do_html_p;
    $retval .= &aid_is_new_html(*rec) if $do_html_p;
    $retval .= "\n";

    $retval;
}

# do the funky quick-jump bar
sub alpha_jump_bar {
    local($regular) = @_;
    local($initial,$retval);

    $retval = '';
    $initial = 'a';
    $regular = "\L${regular}\E";

    foreach $initial (@initials)
    {
	$retval .= (($regular eq $initial) ?
		    "\U${initial}\E\n" :
		    "<a href=\"${initial}-index.html\">\U${initial}\E</a>\n");
    }

    $retval;
}


if ($^W && 0)
{
    $ht_empty_close_tag = '';
}
