#!/usr/local/bin/perl -w

# $Id: aid_staging_clean,v 6.3 2003/10/30 07:28:18 mradwin Exp mradwin $
#
# Copyright (c) 2003  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use Getopt::Std;
use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-hnq] [-d days]
    -h        Display usage information.
    -n        Don't actually edit database, just show what would happen.
    -q        Quiet mode.
    -d days   Delete entries older than <days> days old (default 28).
";

getopts('hnd:q') || die "$usage\n";
$opt_h && die "$usage\n";
die "$opt_d: must be numeric\n$usage\n"
    if defined $opt_d && $opt_d !~ /^\d+$/;

my($days) = $opt_d ? $opt_d : 28;
my($dbmfile) = aid_util::config('staging');
warn "creating $dbmfile...\n" unless (-e $dbmfile);
#die "$dbmfile: $!\n" unless -r $dbmfile;

my(%DB);
tie(%DB, 'DB_File::Lock', $dbmfile, O_RDWR|O_CREAT, 0666, $DB_HASH, 'write')
    or die "$dbmfile: $!\n";

my(%verif) = ();
if (defined $DB{'_verified'})
{
    foreach (split(/\0/, $DB{'_verified'}))
    {
	$verif{$_} = 1;
    }
}

while (my($key,$val) = each %DB)
{
    if ($key =~ /^\w{8}$/ && $val =~ /^-?\d+\0/ && !defined $verif{$key})
    {
	my($id,$packed) = split(/\0/, $val, 2);
	my %rec = aid_util::db_unpack_rec($id,$packed);
	if (($rec{'u'} + (60 * 60 * 24 * $days)) < time)
	{
 	    print aid_util::ampersand_join(\%rec), "\n"
		unless $opt_q;
	    unless ($opt_n)
	    {
		$DB{$key} = "e\0";
		if (defined $DB{$rec{'id'}})
		{
		    delete $DB{$rec{'id'}};
		}
		elsif ($rec{'id'} == -1 && defined $DB{"\L$rec{'e'}\E"})
		{
		    delete $DB{"\L$rec{'e'}\E"};
		}
	    }
	}
    }
}

untie(%DB);

exit 0;

# avoid warnings
if ($^W && 0)
{
    $opt_n = $opt_q = $opt_h;	# avoid warning
}
