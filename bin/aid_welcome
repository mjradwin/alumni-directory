#!/usr/local/bin/perl -w

#
# mails a welcome, update, confirm, or massmail message to members
# $Id: aid_welcome,v 5.34 2003/03/14 20:25:54 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#


$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

use DB_File;
use Fcntl qw(:DEFAULT :flock);

require 'aid_util.pl';
use Getopt::Std;
require 'ctime.pl';

use lib "/pub/m/r/mradwin/private/lib/perl5/site_perl";
use Net::SMTP; 

$default_sleep = 0;
$default_massmail_sleep = 5;

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [options] infile.db [target ids...]
    -h            Display usage information.
    -a            Mail all users in <infile.db> matching -r <reqtype>.
    -d <secs>     Sleep for <secs> seconds between sending e-mail
                  (default $default_massmail_sleep for -m, $default_sleep for all others).
    -r <reqtype>  Request type [0-4] (only valid with -m and -a).
    -l <logfile>  Log to <logfile> instead of default.

Mutually exclusive optional message types (instead of 'welcome' e-mail):
    -u            Send 'update' e-mail.
    -c            Send 'confirmation' e-mail.
    -m <textfile> Massmail the contents of <textfile>.
    -s <textfile> Special massmail contents of <textfile>.
";

@args = @ARGV;

getopts('hd:r:ucm:l:as:') || die "$usage\n";
$opt_h && die "$usage\n";
$opt_h = $opt_h;                # avoid warning
$a = $b = 0;                    # avoid warning
die "$0: Too many mutually-exclusive options\n$usage\n"
    if (($opt_c ? 1 : 0) + ($opt_u ? 1 : 0) + ($opt_m ? 1 : 0) +
	($opt_s ? 1 : 0)) > 1;
die "$0: No database file specified\n$usage\n" unless $ARGV[0];
die "$0: No target ids specified\n$usage\n" unless ($ARGV[1] || $opt_a);
die "$0: Option -m requires -r\n$usage\n" 
    if defined($opt_m) && !defined($opt_r);
die "$0: Option -a requires -r\n$usage\n" 
    if defined($opt_a) && !defined($opt_r);

$directory_name = &aid_config('short_school') . ' Alumni Internet Directory';

%confirm_parameters = 
    (
     'subject'	=>	$directory_name,
     'log'	=>	'confirm',
     'sleep'	=>	$default_sleep,
     'listing'	=>	1,
     'intro'	=>
     "You were sent this address verification message because
it has been 6 months since we last confirmed your
Directory listing.  Please make sure your infromation
below is still current.  If everything you see below is
correct, NO ACTION IS REQUIRED ON YOUR PART.\n\n",

     'textfile'	=>	'',
     'closing'	=>	'',
     );

%welcome_parameters = 
    (
     'subject'	=>	$directory_name,
     'log'	=>	'welcome',
     'sleep'	=>	$default_sleep,
     'listing'	=>	1,
     'intro'	=>
     "Welcome!  Your submission has been processed and you
are now listed on-line in the Directory.\n\n",
     'textfile'	=>	'',
     'closing'	=>
"
Otherwise, if everything you see above is correct,
you're all set.

Once again, welcome to the Alumni Internet Directory!
",
     );

%update_parameters = 
    (
     'subject'	=>	$directory_name,
     'log'	=>	'update',
     'sleep'	=>	$default_sleep,
     'listing'	=>	1,
     'intro'	=>
     "Your contact information has been updated and the
changes are now visible on-line.\n\n",

     'textfile'	=>	'',
     'closing'	=>
"
Otherwise, if everything you see above is correct,
you're all set.
",
     );

%massmail_parameters = 
    (
     'subject'	=>	$directory_name,
     'log'	=>	'massmail',
     'sleep'	=>	$default_massmail_sleep,
     'listing'	=>	1,
     'intro'	=>
     "Per your request, your quarterly digest of the
Directory appears at the end of this message.\n\n",
     'textfile'	=>	'',
     'closing'	=>
"
You also may change your quarterly digest preference
by visiting the above URL.

",
     );

%special_parameters = 
    (
     'subject'	=>	$directory_name,
     'log'	=>	'special',
     'sleep'	=>	$default_massmail_sleep,
     'listing'	=>	0,
     'intro'	=>	'',
     'textfile'	=>	'',
     'closing'	=>	'',
     );

%params = $opt_c ? %confirm_parameters : 
    $opt_u ? %update_parameters :
    $opt_s ? %special_parameters :
    $opt_m ? %massmail_parameters :
    %welcome_parameters;

$logfile = $opt_l ? $opt_l :
    &aid_config('aiddir') . "logs/" . $params{'log'} . '.log';

if ($opt_s || $opt_m) {
    my $f = $opt_s || $opt_m;
    open(TEXTFILE,$f) || die "$0: Can't open $f: $!\n";
    while(<TEXTFILE>) { $params{'textfile'} .= $_; }
    close(TEXTFILE);
}

$params{'sleep'} = $opt_d if defined $opt_d;

$dbmfile = shift;
die "$0: $dbmfile: $!\n" unless -r $dbmfile;
my($db,$fd);
if (-w $dbmfile) 
{
    $db = tie(%DB, 'DB_File', $dbmfile, O_CREAT|O_RDWR, 0644,
	      $DB_File::DB_HASH)
	or die "$dbmfile: $!\n";
}
else
{
    warn "$0: warning: $dbmfile not writeable\n";
    $db = tie(%DB, 'DB_File', $dbmfile, O_RDONLY, 0444,
	      $DB_File::DB_HASH)
	or die "$dbmfile: $!\n";
}
$fd = $db->fd;
open(DB_FH, "+<&=$fd") || die "dup $!";

die "invalid DB: $dbmfile\n" unless defined $DB{'_class'};

open(LOG,">>$logfile") || die "$0: Can't open $logfile: $!\n";
select(LOG); $| = 1; select(STDOUT);

$today = &ctime(time);
chop $today;

print LOG "# [$today] - $0 ", join(' ', @args), "\n";

if ($opt_a)
{
    @ARGV = ();
    unless (flock (DB_FH, LOCK_SH)) { die "flock: $!" }
    while (($key,$val) = each(%DB))
    {
	if ($key =~ /^\d+$/)
	{
	    %rec = &aid_db_unpack_rec($key,$val);

	    next unless $rec{'v'};
	    next if $opt_m && $rec{'q'} != $opt_r;

	    if ($opt_c)
	    {
		next unless $rec{'q'} == 0;
		next unless &aid_is_old($rec{'f'});
	    }

	    push(@ARGV, $rec{'id'});
	}
    }
    flock(DB_FH, LOCK_UN);

    @ARGV = sort { $a <=> $b } @ARGV;
}

foreach (@ARGV)
{
    unless (/^\d+$/)
    {
	warn "$0: skipping target `$_' (invalid id)\n";
	next;
    }
    
    unless (flock (DB_FH, LOCK_SH)) { die "flock: $!" }
    unless (defined $DB{$_})
    {
	warn "$0: skipping target `$_' (missing from $dbmfile)\n";
	flock(DB_FH, LOCK_UN);
	next;
    }

    %rec = &aid_db_unpack_rec($_,$DB{$_});
    flock(DB_FH, LOCK_UN);

    $time = time;
    if (&mail_user($time, *rec))
    {
	# sucessful mailing; update timestamp
	$rec{'lm'} = $time;

	if (-w $dbmfile)
	{
	    unless (flock (DB_FH, LOCK_EX)) { die "flock: $!" }
	    $DB{$rec{'id'}} = &aid_db_pack_rec(*rec);
	    $db->sync;
	    flock(DB_FH, LOCK_UN);
	}

	sleep($params{'sleep'}) if $params{'sleep'} > 0;
    }
}

close(LOG);

undef $db;
untie(%DB);
close(DB_FH);

exit(0);


sub mail_user
{
    local($time,*rec) = @_;
    local($message,$name,@mailto);

    if ($rec{'v'} == 0)
    {
	warn "$0: skipping target `$rec{'id'}' (valid bit is off)\n";
	return 0;
    }

    unless (defined $rec{'e'} && $rec{'e'} ne '')
    {
	warn "$0: skipping target `$rec{'id'}' (has no email address)\n";
	return 0;
    }

    if ($params{'listing'}) {
	$message = &message_body(*rec);
    } else {
	$message = '';
    }

    $message .= $params{'textfile'} .
	"\n-- \n" . &aid_config('short_school') . 
	" Alumni Internet Directory\n" .
	"http://" . &aid_config('master_srv') . &aid_config('master_path');

    $name  = $rec{'gn'};
    $name .= " $rec{'mi'}."
	if defined $rec{'mi'} && $rec{'mi'} ne '';
    $name .= " $rec{'sn'}";
    $name .= " $rec{'mn'}"
	if defined $rec{'mn'} && $rec{'mn'} ne '';
    $name =~ s/\"/\'/g;

    @mailto = ($name,$rec{'e'});
    if ($opt_u && defined $rec{'eo'} &&
	$rec{'eo'} ne '' && "\L$rec{'eo'}\E" ne "\L$rec{'e'}\E")
    {
	push(@mailto,$name,$rec{'eo'});
    }

    my($i);
    my($status) = 0;

    for ($i = 0; $status == 0 && $i < 3; $i++)
    {
	$time = time;
	$status = &aid_sendmail(
	    &aid_config('admin_email'),
	    &aid_config('short_school') . ' Alumni Robot',
	    $params{'subject'} .
		' [' . &aid_config('short_school') . '-' . $rec{'id'} . ']',
		$message,@mailto);

	sleep(3) if $status == 0;

	print LOG $time, " - $rec{'id'} - $rec{'e'} - $status\n";

	print LOG $time, " - $rec{'id'} - $rec{'eo'} - $status - OLD\n"
	    if ($opt_u && defined $rec{'eo'} &&
		$rec{'eo'} ne '' && "\L$rec{'eo'}\E" ne "\L$rec{'e'}\E");
    }

    $status;
} 

sub message_body
{
    local($[) = 0;
    local(*rec) = @_;
    local($about) = &aid_about_text(*rec,1,0,0);
    local($denied) = $rec{'q'} == 0 ?
	"
Since you asked not to receive quarterly Directory
digests via e-mail, you will only receive bi-yearly
address verification messages.
" : '';

    return &aid_inorder_fullname(*rec) . ",

$params{'intro'}You are listed in the Directory as follows:
-------------------------------------------------------
${about}-------------------------------------------------------
$denied
If any of the above information is incorrect or out
of date, please update your listing online at:

  http://" . &aid_config('master_srv') . &aid_config('go_cgi') . "/$rec{'id'}

If you have received this e-mail in error, or you do
not want to be listed in the Directory, please let
me know and I will remove your listing.
$params{'closing'}";

}
