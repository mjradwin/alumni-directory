#!/usr/local/bin/perl -w

#
# mails a welcome, update, confirm, or massmail message to members
# $Id: aid_welcome,v 7.1 2006/02/24 00:13:15 mradwin Exp mradwin $
#
# Copyright (c) 2006  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, ".";
  }
}

use strict;
use Getopt::Std ();
use Net::SMTP; 
use aid_util;
use DBI ();

my $default_sleep = 0;
my $default_massmail_sleep = 5;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [options] [target ids...]
    -h            Display usage information.
    -a            Mail all users in <infile.db> matching -r <reqtype>.
    -y <year>     Mail all users in <infile.db> from year <year>.
    -d <secs>     Sleep for <secs> seconds between sending e-mail
                  (default $default_massmail_sleep for -m, $default_sleep for all others).
    -r <reqtype>  Request type [0-4] (only valid with -m and -a).
    -l <logfile>  Log to <logfile> instead of default.

Mutually exclusive optional message types (instead of 'welcome' e-mail):
    -u            Send 'update' e-mail.
    -c            Send 'confirmation' e-mail.
    -m <textfile> Massmail the contents of <textfile>.
    -s <textfile> Special massmail contents of <textfile>.
";

my @args = @ARGV;

my %opts;
Getopt::Std::getopts("hd:r:ucm:l:as:y:", \%opts) || die "$usage\n";
$opts{"h"} && die "$usage\n";

die "$0: Too many mutually-exclusive options\n$usage\n"
    if (($opts{"c"} ? 1 : 0) + ($opts{"u"} ? 1 : 0) + ($opts{"m"} ? 1 : 0) +
	($opts{"s"} ? 1 : 0)) > 1;
die "$0: No target ids specified\n$usage\n" unless (@ARGV || $opts{"a"} ||
						    $opts{"y"});
die "$0: Option -m requires -r\n$usage\n" 
    if defined($opts{"m"}) && !defined($opts{"r"});
die "$0: Option -a requires -r\n$usage\n" 
    if defined($opts{"a"}) && !defined($opts{"r"});

my $directory_name = aid_util::config("short_school") . " Alumni Internet Directory";

my %confirm_parameters = 
    (
     "subject"	=>	$directory_name,
     "log"	=>	"confirm",
     "sleep"	=>	$default_sleep,
     "listing"	=>	1,
     "intro"	=>
     "You were sent this address verification message because
it has been 6 months since we last confirmed your
Directory listing.  Please make sure your infromation
below is still current.  If everything you see below is
correct, NO ACTION IS REQUIRED ON YOUR PART.\n\n",

     "textfile"	=>	"",
     "closing"	=>	"",
     );

my %welcome_parameters = 
    (
     "subject"	=>	$directory_name,
     "log"	=>	"welcome",
     "sleep"	=>	$default_sleep,
     "listing"	=>	1,
     "intro"	=>
     "Welcome!  Your submission has been processed and you
are now listed on-line in the Directory.\n\n",
     "textfile"	=>	"",
     "closing"	=>
"
Otherwise, if everything you see above is correct,
you're all set.

Once again, welcome to the Alumni Internet Directory!
",
     );

my %update_parameters = 
    (
     "subject"	=>	$directory_name,
     "log"	=>	"update",
     "sleep"	=>	$default_sleep,
     "listing"	=>	1,
     "intro"	=>
     "Your contact information has been updated and the
changes are now visible on-line.\n\n",

     "textfile"	=>	"",
     "closing"	=>
"
Otherwise, if everything you see above is correct,
you're all set.
",
     );

my %massmail_parameters = 
    (
     "subject"	=>	$directory_name,
     "log"	=>	"massmail",
     "sleep"	=>	$default_massmail_sleep,
     "listing"	=>	1,
     "intro"	=>
     "Per your request, your quarterly digest of the
Directory appears at the end of this message.\n\n",
     "textfile"	=>	"",
     "closing"	=>
"
You also may change your quarterly digest preference
by visiting the above URL.

",
     );

my %special_parameters = 
    (
     "subject"	=>	"Memorial Services for Benji Cantwell Thursday 8/26",
     "from_addr" => 'joe@hulanetworks.com',
     "from_name" => "Joe Commendatore",
     "log"	=>	"special",
     "sleep"	=>	$default_massmail_sleep,
     "listing"	=>	0,
     "intro"	=>	"",
     "textfile"	=>	"",
     "closing"	=>	"",
     );

my %params = $opts{"c"} ? %confirm_parameters : 
    $opts{"u"} ? %update_parameters :
    $opts{"s"} ? %special_parameters :
    $opts{"m"} ? %massmail_parameters :
    %welcome_parameters;

my $logfile = $opts{"l"} ? $opts{"l"} :
    aid_util::config("aiddir") . "logs/" . $params{"log"} . ".log";

if ($opts{"s"} || $opts{"m"}) {
    my $f = $opts{"s"} || $opts{"m"};
    open(TEXTFILE,$f) || die "$0: Can't open $f: $!\n";
    while(<TEXTFILE>) { $params{"textfile"} .= $_; }
    close(TEXTFILE);
}

$params{"sleep"} = $opts{"d"} if defined $opts{"d"};

open(LOG,">>$logfile") || die "$0: Can't open $logfile: $!\n";
select(LOG); $| = 1; select(STDOUT);

my $today = scalar(localtime(time));

print LOG "# [$today] - $0 ", join(" ", @args), "\n";

my $dbh = aid_util::db_connect();

if ($opts{"a"})
{
    @ARGV = ();

    my $DB = aid_util::load_records($dbh, "");
    foreach my $recp (values %{$DB})
    {
	next unless $recp->{"v"};
	next if $opts{"m"} && $recp->{"q"} != $opts{"r"};

	if ($opts{"c"})
	{
	    next unless $recp->{"q"} == 0;
	    next unless aid_util::is_old($recp->{"f"});
	}

	push(@ARGV, $recp->{"id"});
    }

    @ARGV = sort { $a <=> $b } @ARGV;
}

if ($opts{"y"})
{
    @ARGV = ();

    my $DB = aid_util::load_records($dbh, "");
    foreach my $recp (values %{$DB})
    {
	next unless $recp->{"v"};
	next unless $recp->{"r"};
	next unless $recp->{"yr"} eq $opts{"y"};

	push(@ARGV, $recp->{"id"});
    }

    @ARGV = sort { $a <=> $b } @ARGV;
}

my $DB = aid_util::load_records($dbh, "");
foreach my $id (@ARGV)
{
    unless ($id =~ /^\d+$/)
    {
	warn "$0: skipping target `$id' (invalid id)\n";
	next;
    }

    unless (defined $DB->{$id})
    {
	warn "$0: skipping target `$id' (missing from DB)\n";
	next;
    }

    if (mail_user($DB->{$id}))
    {
	sleep($params{"sleep"}) if $params{"sleep"} > 0;
    }
}

close(LOG);
exit(0);

sub mail_user
{
    my($recp) = @_;
    my($message,$name,@mailto);

    if ($recp->{"v"} == 0)
    {
	warn "$0: skipping target `$recp->{'id'}' (valid bit is off)\n";
	return 0;
    }

    unless (defined $recp->{"e"} && $recp->{"e"} ne "")
    {
	warn "$0: skipping target `$recp->{'id'}' (has no email address)\n";
	return 0;
    }

    if ($params{"listing"}) {
	$message = message_body($recp);
    } else {
	$message = "";
    }

    $message .= $params{"textfile"} .
	"\n-- \n" . aid_util::config("short_school") . 
	" Alumni Internet Directory\n" .
	"http://" . aid_util::config("master_srv") . aid_util::config("master_path");

    $name  = $recp->{"gn"};
    $name .= " $recp->{'mi'}."
	if defined $recp->{"mi"} && $recp->{"mi"} ne "";
    $name .= " $recp->{'sn'}";
    $name .= " $recp->{'mn'}"
	if defined $recp->{"mn"} && $recp->{"mn"} ne "";
    $name =~ s/\"/\'/g;

    @mailto = ($name,$recp->{"e"});
    if ($opts{"u"}) {
	my $sql = "SELECT alumnus_old_id FROM aid_alumnus WHERE alumnus_id = ?";
	my $sth = $dbh->prepare($sql);
	$sth->execute($recp->{"id"}) or die $sth->errstr;
	my($old_id) = $sth->fetchrow_array;

	if (defined $old_id) {
	    $sql = "SELECT entry_email FROM aid_entry WHERE entry_id = ?";
	    $sth = $dbh->prepare($sql);
	    $sth->execute($old_id) or die $sth->errstr;
	    my($old_email) = $sth->fetchrow_array;
	    if (defined $old_email) {
		$recp->{"eo"} = $old_email;
	    }
	}

	if (defined $recp->{"eo"} && lc($recp->{"eo"}) ne lc($recp->{"e"})) {
	    push(@mailto,$name,$recp->{"eo"});
	}
    }

    my($i);
    my($status) = 0;

    for ($i = 0; $status == 0 && $i < 3; $i++)
    {
	my $from_addr = $params{"from_addr"} ? $params{"from_addr"} :
	    aid_util::config("admin_email");
	my $from_name = $params{"from_name"} ? $params{"from_name"} :
	    aid_util::config("short_school") . " Alumni Robot";

	my $time = time;
	$status = aid_util::sendmail(
	    $from_addr,
	    $from_name,
	    $params{"subject"} .
		" [" . aid_util::config("short_school") . "-" . $recp->{"id"} . "]",
		$message,@mailto);

	sleep(3) if $status == 0;

	print LOG $time, " - $recp->{'id'} - $recp->{'e'} - $status\n";

	print LOG $time, " - $recp->{'id'} - $recp->{'eo'} - $status - OLD\n"
	    if ($opts{"u"} && defined $recp->{"eo"} &&
		$recp->{"eo"} ne "" && lc($recp->{"eo"}) ne lc($recp->{"e"}));
    }

    $status;
} 

sub message_body
{
    my($recp) = @_;
    my $about = aid_util::about_text($recp,1,0,0);
    my $denied = $recp->{"q"} == 0 ?
	"
Since you asked not to receive quarterly Directory
digests via e-mail, you will only receive bi-yearly
address verification messages.
" : "";

    return aid_util::inorder_fullname($recp) . ",

$params{'intro'}You are listed in the Directory as follows:
-------------------------------------------------------
${about}-------------------------------------------------------
$denied
If any of the above information is incorrect or out
of date, please update your listing online at:

  http://" . aid_util::config("master_srv") . aid_util::config("go_cgi") . "/$recp->{'id'}

If you have received this e-mail in error, or you do
not want to be listed in the Directory, please let
me know and I will remove your listing.
$params{'closing'}";

}
