#!/usr/local/bin/perl -w

# $Id: aid_staging_resend,v 6.4 2003/10/30 07:28:18 mradwin Exp mradwin $
#
# Copyright (c) 2003  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Internet Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use Getopt::Std;
use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-h] randkey [randkey2 .. randkeyN]
    -h        Display usage information.
";

getopts('h') || die "$usage\n";
@ARGV || die "$usage\n";
$opt_h && die "$usage\n";

my($dbmfile) = aid_util::config('staging');
die "$dbmfile: $!\n" unless -r $dbmfile;

my(%DB);
tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
    or die "$dbmfile: $!\n";

foreach $key (@ARGV)
{
    if (defined $DB{$key} && $key =~ /^\w{8}$/ && $DB{$key} =~ /^-?\d+\0/)
    {
	my($id,$packed) = split(/\0/, $DB{$key}, 2);
	my %rec = aid_util::db_unpack_rec($id,$packed);

	my($return_path,$from,$subject,$body,@recip) =
	    aid_util::verification_message($key, \%rec);

	my($i);
	my($status) = 0;

	for ($i = 0; $status == 0 && $i < 3; $i++)
	{
	    $status =
		aid_util::sendmail_v2($return_path,$from,$subject,$body,@recip);
	}

	next unless $status;

	# update timestamp
	$rec{'lm'} = time;
	$DB{$key} = $rec{'id'} . "\0" . aid_util::db_pack_rec(\%rec);

	# display something to stdout
	($affil,undef) = aid_util::affiliate(\%rec,0);
	print aid_util::inorder_fullname(\%rec), $affil, " <",
	$rec{'e'}, ">\n",
	"web submission: ", scalar(localtime($rec{'u'})), "\n",
	"key=$key\tid=$id\n";

	print "\n";
    }
}

untie(%DB);

exit 0;

# avoid warnings
if ($^W && 0)
{
    $opt_h = $opt_h;		# avoid warning
}
