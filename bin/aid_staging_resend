#!/usr/local/bin/perl -w

# $Id: aid_staging_resend,v 1.6 2003/05/15 00:20:29 mradwin Exp $
#
#   Copyright (c) 2003  Michael J. Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

use lib "/pub/m/r/mradwin/private/lib/perl5/site_perl";
use DB_File::Lock;

use aid_util;
use Getopt::Std;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-h] randkey [randkey2 .. randkeyN]
    -h        Display usage information.
";

getopts('h') || die "$usage\n";
@ARGV || die "$usage\n";
$opt_h && die "$usage\n";

my($dbmfile) = aid_util::config('staging');
die "$dbmfile: $!\n" unless -r $dbmfile;

my(%DB);
tie(%DB, 'DB_File::Lock', $dbmfile, O_CREAT|O_RDWR, 0644, $DB_HASH, 'write')
    or die "$dbmfile: $!\n";

foreach $key (@ARGV)
{
    if (defined $DB{$key} && $key =~ /^\w{8}$/ && $DB{$key} =~ /^-?\d+\0/)
    {
	my($id,$packed) = split(/\0/, $DB{$key}, 2);
	my %rec = aid_util::db_unpack_rec($id,$packed);

	my($return_path,$from,$subject,$body,@recip) =
	    aid_util::verification_message($key, \%rec);

	my($i);
	my($status) = 0;

	for ($i = 0; $status == 0 && $i < 3; $i++)
	{
	    $status =
		aid_util::sendmail_v2($return_path,$from,$subject,$body,@recip);
	}

	next unless $status;

	# update timestamp
	$rec{'lm'} = time;
	$DB{$key} = $rec{'id'} . "\0" . aid_util::db_pack_rec(\%rec);

	# display something to stdout
	($affil,undef) = aid_util::affiliate(\%rec,0);
	print aid_util::inorder_fullname(\%rec), $affil, " <",
	$rec{'e'}, ">\n",
	"web submission: ", scalar(localtime($rec{'u'})),
	"key=$key\tid=$id\n";

	print "\n";
    }
}

untie(%DB);

exit 0;

# avoid warnings
if ($^W && 0)
{
    $opt_h = $opt_h;		# avoid warning
}
