#!/usr/bin/perl -w

#
# does the html version of the alphabetical address list
# $Id: aid_alpha_html,v 3.25 1999/03/26 19:41:22 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-ht] infile.db outfile
    -h        Display usage information.
    -t        Output text only
";

&Getopts('ht') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

$info_gif = &aid_image_tag('info');
$blank_gif = ($opt_t) ? "" : &aid_image_tag('blank');

$ARGV[0] =~ s/\.db$//;
die "can't open $ARGV[0].db\n" unless -r "$ARGV[0].db";
dbmopen(%DB,$ARGV[0],0444);

die "no __alpha__ key!\n" unless defined $DB{'__alpha__'};

open(FMTOUT,">$ARGV[1]") || die "Can't open $ARGV[1]: $!\n";

if (!$opt_t) {
    print FMTOUT &aid_common_html_hdr(1,'Alumni Listed by Last Name',1,
				  unpack("N",$DB{'__t__'}));
    print FMTOUT &aid_common_intro_para(1);
    print FMTOUT "<p><a name=\"top\">Index</a>: <code>";
    # do the funky quick-jump bar
    $initial = 'A';
    while ($initial ne 'AA') {
	print FMTOUT "<a href=\"#last$initial\">$initial</a>\n";
	$initial++;
    }
    print FMTOUT "</code>";
    print FMTOUT "\n<p>\n<pre>";
}

print FMTOUT "Name and Graduation Year$blank_gif                 E-Mail\n";
print FMTOUT "---------------------------------------------------------------------------";

@alpha_ids = unpack("n*",$DB{'__alpha__'});
$initial = "Z";

foreach $id (@alpha_ids)
{
    %rec = &aid_db_unpack_rec($id,$DB{$id});
    next unless $rec{'valid'};

    $cur_initial = substr($rec{'last'}, 0, 1);
    $cur_initial = "\U${cur_initial}\E";
    if ("\U${initial}\E" ne $cur_initial) {
	print STDERR ".";
        $initial = $cur_initial;
	print FMTOUT "\n";
	$opt_t || print FMTOUT "<a name=\"last$initial\">";
	print FMTOUT $initial;
	$opt_t || print FMTOUT "</a> (<a href=\"#top\">top</a>)";
	print FMTOUT "\n";
    }

    $fullname = &aid_fullname(*rec);
    ($affil,$len) = &aid_affiliate(*rec,!$opt_t);

    print FMTOUT ' ';
    $opt_t || print FMTOUT "<a href=\"" . &aid_about_path(*rec) . "\">$info_gif</a>"; #'#
    $opt_t || print FMTOUT "<a name=\"$rec{'alias'}\"";
    $opt_t || print FMTOUT " href=\"$rec{'www'}\"" if $rec{'www'} ne '';
    $opt_t || print FMTOUT ">";
    print FMTOUT $fullname;
    $opt_t || print FMTOUT "</a>";
    print FMTOUT $affil;
    print FMTOUT ' ', ' ' x (39 - (length($fullname) + $len));
    $opt_t || print FMTOUT "<a href=\"mailto:", $rec{'email'}, "\">";
    print FMTOUT $rec{'email'};
    $opt_t || print FMTOUT "</a>";
    $opt_t || print FMTOUT &aid_is_new_html(*rec);
    print FMTOUT "\n";
}
print STDERR "\n";

$opt_t || print FMTOUT "</pre>\n";
$opt_t || print FMTOUT &aid_common_html_ftr(1);

dbmclose(%DB);
exit(0);
