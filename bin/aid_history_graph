#!/usr/local/bin/perl -w

# $Id: aid_history_graph,v 6.2 2003/08/25 05:32:04 mradwin Exp mradwin $
#
#   Copyright (c) 2003  Michael J. Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use Getopt::Std;
use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-h] infile.db outfile
    -h        Display usage information.
";

getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

$dbmfile = shift;
tie(%DB, 'DB_File::Lock', $dbmfile, O_RDONLY, 0444, $DB_HASH, 'read')
    or die "$dbmfile: $!\n";

die "corrupt/missing _class key!"
    unless defined $DB{'_class'} && $DB{'_class'} ne '';

$outfile = shift;
open(FMTOUT,">$outfile") || die "Can't open $outfile: $!\n";

($i,$i,$i,$i,$i,$epoch_year,$i,$epoch_yday,$i) =
    localtime($aid_util::EPOCH);

@members = ();
$tot = 0;
while (my($key,$val) = each %DB)
{
    next unless $key =~ /^\d+$/;

    my %rec = aid_util::db_unpack_rec($key,$val);

    ($i,$i,$i,$i,$i,$year,$i,$yday,$i) = localtime($rec{'c'});

    # time began on the EPOCH.  Compute the number of days since the
    # epoch that this record was created
    $yday += (($year - $epoch_year) * 365) - $epoch_yday;

    $members[$yday]++;
}

$tot = 0;
for ($i = 0; $i <= $#members; $i++)
{
    next unless defined $members[$i];
    $tot += $members[$i];
    print FMTOUT $i, "\t", $tot, "\n";
}

close(FMTOUT);
untie(%DB);
exit(0);

# avoid warnings
if ($^W && 0)
{
    $aid_util::EPOCH = '';
}
