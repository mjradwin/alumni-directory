#!/usr/bin/perl -w

# $Id: aid_dbm_write,v 1.5 1999/02/05 18:34:12 mradwin Exp mradwin $

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-h] infile.adr outfile.db
    -h        Display usage information.
";

&Getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

%class_members = ();
@alpha_ids = ();

print STDERR "reading text db...";
@db = &aid_alpha_db($ARGV[0]);
print STDERR "\n";

$ARGV[1] =~ s/\.db$//;

print STDERR "making binary db...";
dbmopen(DB, $ARGV[1], 0666);
for (@db)
{
    next unless defined($_) && $_ ne '';
    %rec = &aid_parse($_);
    $rec{'message'} = &aid_get_usertext($rec{'id'});

    $DB{$rec{'id'}} = 
	pack("C3N4",
	     $rec{'valid'},
	     $rec{'request'},
	     $rec{'reunion'},
	     $rec{'bounce'},
	     $rec{'created'},
	     $rec{'time'},
	     $rec{'fresh'}
	     ) .
	join("\0",
	     $rec{'last'},
	     $rec{'married'},
	     $rec{'first'},
	     $rec{'school'},
	     $rec{'year'},
	     $rec{'email'},
	     $rec{'www'},
	     $rec{'location'},
	     $rec{'inethost'},
	     $rec{'alias'},
	     $rec{'message'}
	     );

    $DB{"\L$rec{'email'}\E"} = pack("n", $rec{'id'});

    # make a list of alpha years
    $ykey = ($rec{'year'} =~ /^\d+$/) ? $rec{'year'} : 'other';
    if (defined $class_members{$ykey})
    {
	$class_members{$ykey} .= ' ' . $rec{'id'};
    }
    else
    {
	$class_members{$ykey}  =       $rec{'id'};
    }
    
    # also make the alpha list
    push(@alpha_ids, $rec{'id'});
    print STDERR ".";
}
print STDERR "\n";

print STDERR "finishing...";

$DB{'__alpha__'} = pack("n*", @alpha_ids);
print STDERR ".";

@class_ids = ();
foreach $ykey (sort keys %class_members)
{
    @alpha_ids = split(/ /, $class_members{$ykey});
    $DB{"__${ykey}__"} = pack("n*", @alpha_ids);
    push(@class_ids, @alpha_ids);
}
print STDERR ".";

$DB{'__class__'} = pack("n*", @class_ids);

dbmclose(DB);

print STDERR ".";
print STDERR "\n";

