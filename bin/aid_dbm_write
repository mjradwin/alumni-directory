#!/usr/bin/perl -w

# $Id: aid_dbm_write,v 1.15 1999/03/03 20:33:12 mradwin Exp mradwin $

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-h] infile.adr outfile.db
    -h        Display usage information.
";

&Getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning

%awalt = ();
%class_members = ();
%class_latest = ();
%www_class_members = ();
@alpha_ids = ();

print STDERR "reading text db...";
@db = &aid_alpha_db($ARGV[0]);
print STDERR "\n";

$ARGV[1] =~ s/\.db$//;

print STDERR "making binary db...";
dbmopen(DB, $ARGV[1], 0666);

$DB{'__created__'} = pack("N", time);

$latest = 0;
$latest_www = 0;
$latest_awalt = 0;
$latest_goner = 0;

for (@db)
{
    next unless defined($_) && $_ ne '';
    %rec = &aid_parse($_);
    $rec{'message'} = &aid_get_usertext($rec{'id'});

    $DB{$rec{'id'}} = &aid_db_pack_rec(*rec);
    $DB{"\L$rec{'email'}\E"} = pack("n", $rec{'id'});

    # make a list of alpha years
    if ($rec{'valid'})
    {
	$latest = $rec{'time'} if $rec{'time'} > $latest;

	$ykey = ($rec{'year'} =~ /^\d+$/) ? $rec{'year'} : 'other';
	if (defined $class_members{$ykey})
	{
	    $class_members{$ykey} .= ' ' . $rec{'id'};
	    $class_latest{$ykey}   =       $rec{'time'} if
		$rec{'time'} > $class_latest{$ykey};
	}
	else
	{
	    $class_members{$ykey}  =       $rec{'id'};
	    $class_latest{$ykey}   =       $rec{'time'};
	}

	if ($rec{'www'} ne '')
	{
	    $latest_www = $rec{'time'} if $rec{'time'} > $latest_www;
	    if (defined $www_class_members{$ykey})
	    {
		$www_class_members{$ykey} .= ' ' . $rec{'id'};
	    }
	    else
	    {
		$www_class_members{$ykey}  =       $rec{'id'};
	    }
	}

	if ($rec{'sch_id'} == $aid_util'school_awalt ||
            $rec{'sch_id'} == $aid_util'school_both)
	{
	    $latest_awalt = $rec{'time'} if $rec{'time'} > $latest_awalt;

	    if (defined $awalt{$ykey})
	    {
		$awalt{$ykey} .= ' ' . $rec{'id'};
	    }
	    else
	    {
		$awalt{$ykey}  =       $rec{'id'};
	    }
	}
    }
    else
    {
	$latest_goner = $rec{'bounce'} if $rec{'bounce'} > $latest_goner;
	$latest_goner = $rec{'fresh'} if $rec{'fresh'} > $latest_goner;
    }
    
    # also make the alpha list
    push(@alpha_ids, $rec{'id'});
    print STDERR ".";
}
print STDERR "\n";

print STDERR "secondary keys...";
$DB{'__alpha__'} = pack("n*", @alpha_ids);
print STDERR ".";

@class_ids = ();
@years = sort keys %class_members;
$DB{'__years__'} = pack("n*",grep(/\d+/,@years));
print STDERR ".";

foreach $ykey (@years)
{
    @alpha_ids = split(/ /, $class_members{$ykey});
    $DB{"__${ykey}__"} = pack("n*", @alpha_ids);
    $DB{"__t_${ykey}__"} = pack("N", $class_latest{$ykey});
    push(@class_ids, @alpha_ids);
    print STDERR ".";
}

$DB{'__class__'} = pack("n*", @class_ids);
print STDERR ".";

# now do years, but only for www
@years = sort keys %www_class_members;
$DB{'__www_years__'} = pack("n*",grep(/\d+/,@years));
foreach $ykey (@years)
{
    $DB{"__www_${ykey}__"} = pack("n*", split(/ /, $www_class_members{$ykey}));
    print STDERR ".";
}

# now do years, but only for awalt
@years = sort keys %awalt;
$DB{'__awalt_years__'} = pack("n*",grep(/\d+/,@years));
foreach $ykey (@years)
{
    $DB{"__awalt_${ykey}__"} = pack("n*", split(/ /, $awalt{$ykey}));
    print STDERR ".";
}
print STDERR "\n";

print STDERR "finishing...";

$DB{'__t__'} = pack("N", $latest);
print STDERR ".";
$DB{'__t_www__'} = pack("N", $latest_www);
print STDERR ".";
$DB{'__t_awalt__'} = pack("N", $latest_awalt);
print STDERR ".";
$DB{'__t_goner__'} = pack("N", $latest_goner);
print STDERR ".";

dbmclose(DB);

print STDERR ".";
print STDERR "\n";

exit(0);
