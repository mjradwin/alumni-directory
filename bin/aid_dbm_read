#!/usr/bin/perl -w

# $Id: aid_dbm_read,v 1.6 1999/02/10 20:45:40 mradwin Exp mradwin $

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-hac] [-t adr] infile.db [key]
    -h        Display usage information.
    -a        Display all, sorted by alpha.
    -c        Display all, sorted by class.
    -t adr    Write text address file to <adr>.
";

&Getopts('hact:') || die "$usage\n";
$opt_h && die "$usage\n";
$ARGV[0] || die "$usage\n";
$opt_h = $opt_h;		# avoid warning
$opt_c = $opt_c;		# avoid warning
$opt_a = $opt_a;		# avoid warning

$ARGV[0] =~ s/\.db$//;
die "can't open $ARGV[0].db\n" unless -r "$ARGV[0].db";

dbmopen(DB, $ARGV[0], 0444);

if ($opt_t)
{
    open(DATA,">$opt_t") || die "can't open $opt_t: $!\n";
    while (($key,$val) = each %DB)
    {
	next unless $key =~ /^\d+$/;
	$ids{sprintf("%05d",$key)} = $val;
    }

    foreach (sort keys %ids)
    {
	%rec = &aid_db_unpack_rec(int($_),$ids{$_});
	print DATA &aid_join(*rec), "\n";
    } 
    close(DATA);
    undef %ids;
}
elsif ($ARGV[1])
{
    &display_key_val("\L$ARGV[1]\E",$DB{"\L$ARGV[1]\E"});
}
elsif ($opt_a)
{
    die "no __alpha__ key in $ARGV[0].db\n" unless defined $DB{'__alpha__'};
    @ids = unpack("n*", $DB{'__alpha__'});
    for (@ids)
    {
	%rec = &aid_db_unpack_rec($_,$DB{$_});
	($affil,$i) = &affiliate(*rec,0);
	print $rec{'last'}, ", ", $rec{'first'}, $affil, "\n";
    }
}
elsif ($opt_c)
{
    die "no __class__ key in $ARGV[0].db\n" unless defined $DB{'__class__'};
    @ids = unpack("n*", $DB{'__class__'});
    for (@ids)
    {
	%rec = &aid_db_unpack_rec($_,$DB{$_});
	($affil,$i) = &affiliate(*rec,0);
	print $rec{'last'}, ", ", $rec{'first'}, $affil, "\n";
    }
}
else
{
    while (($key,$val) = each %DB)
    {
	&display_key_val($key,$val);
    }
}

dbmclose(DB);
exit 0;


sub display_key_val
{
    local($key,$val) = @_;
    local(*rec);

    if ($key =~ /^\d+$/)
    {
	%rec = &aid_db_unpack_rec($key,$val);
	print "record $key = ", &aid_join(*rec), "\n";
    }

    elsif ($key =~ /^__(\d\d\d\d)__$/)
    {
	print "year $1 = ", join(',', unpack("n*", $val)), "\n";
    }

    elsif ($key =~ /^__other__$/)
    {
	print "year other = ", join(',', unpack("n*", $val)), "\n";
    }

    elsif ($key =~ /^__years__$/)
    {
	print "list years = ", join(',', unpack("n*", $val)), "\n";
    }

    elsif ($key =~ /^__class__$/)
    {
	print "list class = ", join(',', unpack("n*", $val)), "\n";
    }

    elsif ($key =~ /^__alpha__$/)
    {
	print "list alpha = ", join(',', unpack("n*", $val)), "\n";
    }

    elsif ($key =~ /\@/)
    {
	print "email $key = ", unpack("n*", $val), "\n";
    }

    else
    {
	print "unknown key $key!\n";
    }

    1;
}
