#!/usr/local/bin/perl -w

# $Id: aid_multi_class_welcome,v 5.15 2003/05/15 00:30:45 mradwin Exp $
#
#   Copyright (c) 2003  Michael J. Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
unshift(@INC, $dirname);

use lib "/pub/m/r/mradwin/private/lib/perl5/site_perl";
use DB_File::Lock;
use Getopt::Std;

use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-hq] infile.db classtxt-dir
    -h        Display usage information.
    -q        Quiet.
";

my(%opts);
&getopts('hq', \%opts) || die "$usage\n";
$opts{'h'} && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";

$dbmfile = shift;
tie(%DB, 'DB_File::Lock', $dbmfile, O_RDONLY, 0444, $DB_HASH, 'read')
    or die "$dbmfile: $!\n";

die "corrupt/missing _years key!"
    unless defined $DB{'_years'} && $DB{'_years'} ne '';
@years = unpack("n*",$DB{'_years'});
push(@years, 'other') if defined $DB{'_other'} && $DB{'_other'} ne '';

$dir = shift;
$dir =~ s,/$,,;
die "$0: $dir: $!\n" unless -d $dir;

$welcome_exe = aid_util::config('aiddir') . 'bin/aid_welcome';
die "$0: $welcome_exe: $!\n" unless -x $welcome_exe;

($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime(time);
$date = sprintf("%4d%02d%02d", $year + 1900, $mon + 1, $mday);

# unbuffered output
select(STDOUT); $| = 1;

foreach (@years)
{
    die "corrupt/missing _$_ key!"
	unless defined $DB{"_$_"} && $DB{"_$_"} ne '';
    @ids = unpack("n*",$DB{"_$_"});
    @mail_ids = ();

    foreach $id (@ids)
    {
	my %rec = aid_util::db_unpack_rec($id,$DB{$id});
	next unless $rec{'v'};
	next unless $rec{'q'} == 4;

	push(@mail_ids, $id);
    }

    if (@mail_ids)
    {
	unless (-r "${dir}/${_}.txt") {
	    warn "can't find ${dir}/${_}.txt; skipping $_\n";
	    next;
	}

	@mail_ids = sort { $a <=> $b } @mail_ids;

	print "$welcome_exe -l logs/massmail-$date-4.log -r4 ",
	      "-m ${dir}/${_}.txt $dbmfile ", join(' ', @mail_ids), "\n"
		  unless $opts{'q'};

	system
	    $welcome_exe,
    	    '-l', 'logs/massmail-' . $date . '-4.log',
	    '-r4',
	    '-m', $dir . '/' . $_ . '.txt',
    	    $dbmfile,
	    @mail_ids;
	aid_util::die_if_failure();
    }
}

untie(%DB);
exit(0);


if ($^W && 0)
{
    ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
	localtime(time);
    $a = $b = 0;
}
