#!/usr/local/bin/perl -w

# $Id: aid_multi_class_welcome,v 6.4 2003/10/30 17:56:04 mradwin Exp mradwin $
#
# Copyright (c) 2003  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}
use lib "/home/mradwin/local/share/perl";

use DB_File::Lock;
use Getopt::Std;
use aid_util;

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-hq] infile.db classtxt-dir
    -h        Display usage information.
    -q        Quiet.
";

my(%opts);
&getopts('hq', \%opts) || die "$usage\n";
$opts{'h'} && die "$usage\n";
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";

$dbmfile = shift;
tie(%DB, 'DB_File::Lock', $dbmfile, O_RDONLY, 0444, $DB_HASH, 'read')
    or die "$dbmfile: $!\n";

die "corrupt/missing _years key!"
    unless defined $DB{'_years'} && $DB{'_years'} ne '';
@years = unpack("n*",$DB{'_years'});
push(@years, 'other') if defined $DB{'_other'} && $DB{'_other'} ne '';

$dir = shift;
$dir =~ s,/$,,;
die "$0: $dir: $!\n" unless -d $dir;

$welcome_exe = aid_util::config('aiddir') . 'bin/aid_welcome';
die "$0: $welcome_exe: $!\n" unless -x $welcome_exe;

($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime(time);
$date = sprintf("%4d%02d%02d", $year + 1900, $mon + 1, $mday);

# unbuffered output
select(STDOUT); $| = 1;

foreach (@years)
{
    die "corrupt/missing _$_ key!"
	unless defined $DB{"_$_"} && $DB{"_$_"} ne '';
    @ids = unpack("n*",$DB{"_$_"});
    @mail_ids = ();

    foreach $id (@ids)
    {
	my %rec = aid_util::db_unpack_rec($id,$DB{$id});
	next unless $rec{'v'};
	next unless $rec{'q'} == 4;

	push(@mail_ids, $id);
    }

    if (@mail_ids)
    {
	unless (-r "${dir}/${_}.txt") {
	    warn "can't find ${dir}/${_}.txt; skipping $_\n";
	    next;
	}

	@mail_ids = sort { $a <=> $b } @mail_ids;

	print "$welcome_exe -l logs/massmail-$date-4.log -r4 ",
	      "-m ${dir}/${_}.txt $dbmfile ", join(' ', @mail_ids), "\n"
		  unless $opts{'q'};

	system
	    $welcome_exe,
    	    '-l', 'logs/massmail-' . $date . '-4.log',
	    '-r4',
	    '-m', $dir . '/' . $_ . '.txt',
    	    $dbmfile,
	    @mail_ids;
	aid_util::die_if_failure();
    }
}

untie(%DB);
exit(0);


if ($^W && 0)
{
    ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
	localtime(time);
    $a = $b = 0;
}
