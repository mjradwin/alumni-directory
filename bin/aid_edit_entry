#!/usr/bin/perl -w

# $Id: aid_edit_entry,v 1.3 1999/04/08 22:41:28 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

require 'aid_util.pl';
require 'getopts.pl';
require 'ctime.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-h] infile.db userid
    -h        Display usage information.
";

&Getopts('h') || die "$usage\n";
$opt_h && die "$usage\n";
$opt_h = $opt_h;		# avoid warning
$ARGV[0] || die "$usage\n";
$ARGV[1] || die "$usage\n";

$dbmfile = shift;
$dbmfile =~ s/\.db$//;
die "$0: ${dbmfile}.db: $!\n" unless -r "${dbmfile}.db";

$mode = (-w "${dbmfile}.db") ? 0644 : 0444;
dbmopen(%DB,$dbmfile,$mode) || die "$0: ${dbmfile}.db: $!\n";

$id = shift;
if ($id =~ /^\d+$/)
{
    die "$0: no key $id in ${dbmfile}.db\n" unless defined $DB{$id};
    %rec = &aid_db_unpack_rec($id,$DB{$id});
}
else
{
    $email = "\L$id\E";
    die "$0: no key \L$id\E in ${dbmfile}.db\n" unless defined $DB{$email};

    $id = unpack("n*", $DB{$email});
    die "$0: no key $id in ${dbmfile}.db\n" unless defined $DB{$id};

    %rec = &aid_db_unpack_rec($id,$DB{$id});
}

$note_beg_str = &aid_config('note_beg_str');
$note_end_str = &aid_config('note_end_str');
$tmpfile = '/tmp/aid_edit_entry.' . $$;

open(TMPFILE,">$tmpfile") || die "$tmpfile: $!\n";
print TMPFILE '# $Id: aid_edit_entry,v 1.3 1999/04/08 22:41:28 mradwin Exp mradwin $', "\n";
print TMPFILE "# record last touched: ",
 (($rec{'f'} > $rec{'b'}) ? &ctime($rec{'f'}) : &ctime($rec{'b'}));

foreach (@aid_edit_field_names)
{
    print TMPFILE $_, '=', $rec{$_}, "\n";
}
print TMPFILE $note_beg_str, "\n", $rec{'n'}, $note_end_str, "\n";
close(TMPFILE);

$editor = (defined $ENV{'VISUAL'} ? $ENV{'VISUAL'} : 
	   (defined $ENV{'EDITOR'} ? $ENV{'EDITOR'} : 'vi'));
system "$editor $tmpfile" || die "$0: $editor: $!\n";

%newrec = ();
open(TMPFILE,$tmpfile) || die "$tmpfile: $!\n";
unlink($tmpfile);
$note = '';
while(<TMPFILE>)
{
    if (/^$note_beg_str/o)
    {
	while(<TMPFILE>)
	{
	    last if /^$note_end_str/o;
	    $note .= $_;
	}
    }
    else
    {
	chop;
	next if /^#/;
	next if /^\s*$/;
	warn "$0: $tmpfile: bad line $_\n" unless /^.+=.*$/;
	($key,$val) = split(/=/, $_, 2);
	$newrec{$key} = $val;
    }
}
close(TMPFILE);

# note is a special case
$newrec{'n'} = ($note !~ /^\s*$/) ? $note : '';

# assign the old value unless it was explicit in the edit
$changed = 0;
while(($key,$val) = each(%rec))
{
    $newrec{$key} = $rec{$key} unless defined $newrec{$key};
    $changed = 1 if $newrec{$key} ne $rec{$key};
}

if ($mode == 0444)
{
    print STDERR "$0: can't save changes (${dbmfile}.db not writable)\n"
	if $changed == 1;
}
elsif ($changed == 1)
{
    if ($id != $newrec{'id'})
    {
	warn "$0: warning: changed id from $id to $newrec{'id'}\n";
	delete $DB{$id};
    }

    $DB{$newrec{'id'}} = &aid_db_pack_rec(*newrec);
    print STDERR "$0: update successful\n";
}

dbmclose(%DB);
exit 0;

if ($^W && 0)
{
    @aid_edit_field_names = ();
}
