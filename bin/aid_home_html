#!/usr/local/bin/perl -w

#
# does the html version of just home pages
# $Id: aid_home_html,v 7.6 2007/04/11 16:46:44 mradwin Exp mradwin $
#
# Copyright (c) 2006  Michael J. Radwin.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#  * Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
#
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
#  * Neither the name of the High School Alumni Directory
#    nor the names of its contributors may be used to endorse or
#    promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

BEGIN {
  if ($0 =~ m,(.*[/\\]),) {
    unshift @INC, $1;
  } else {
    unshift @INC, '.';
  }
}

use strict;
use Getopt::Std;
use aid_util;
use aid_submit;
use DBI ();

$0 =~ s,.*/,,;  # basename
my $usage = "usage: $0 [-hq] {-s,-f <file>} -p <pg> -t <txt> out.html
    -h        Display usage information.
    -q        Quiet.
    -p <pg>   Page number is <pg>.   REQUIRED.
    -t <txt>  Page title  is <txt>.  REQUIRED.

    -s        Create the submit page.
    -f <file> Create an 'other' page from HTML fragment in <file>.

Either -s or -f must be supplied.  They are mutuallly exclusive.
";

my %opts;
getopts('hst:f:p:q', \%opts) || die "$usage\n";
$opts{"h"} && die "$usage\n";

die "$usage\n" unless $ARGV[0];
die "$usage\n"
    unless ($opts{"s"} ? 1 : 0) + ($opts{"f"} ? 1 : 0) == 1;
die "$usage\n" unless defined($opts{"p"});
die "$usage\n" unless defined($opts{"t"});

my $connected = 0;
my $dbname = aid_util::config("dbname");
my $dbhost = aid_util::config("dbhost");
my $dsn = "DBI:mysql:database=$dbname;host=$dbhost";
my $dbh;

my $infile = $opts{"f"};
my $outfile = shift;

my @years;
my $time;
my @lines;

if ($opts{"f"})
{
    open(INFILE,$infile) || die "Can't open $infile: $!\n";
    $time = (stat(INFILE))[9];
    @lines = <INFILE>;
    close(INFILE);
}
else
{
    # $opts{"s"}
    $time = (stat(aid_util::config('aiddir') . 'bin/aid_submit.pm'))[9];
}

if ($opts{"f"} && $opts{"p"} == 0)
{
#    $time = unpack("N",$DB{'_t'});
    $time = time();		# TODO fix this

    my $dbh = aid_util::db_connect();
    $dbh || die $DBI::errstr;
    @years = aid_util::load_years($dbh);
}

my $extra_meta;
if ($opts{"p"} == 0)
{
    $extra_meta = "\n<link rel=\"alternate\" type=\"application/rss+xml\" "
	. "title=\"RSS\" href=\"http://" . aid_util::config('master_srv') 
	. aid_util::config('master_path') . "summary.rdf\">";
}

open(OUTFILE,">$outfile") || die "Can't open $outfile: $!\n";
print OUTFILE aid_util::common_html_hdr($opts{"p"},$opts{"t"},0,$time,
					undef,$extra_meta);

if ($opts{"s"}) {
    print OUTFILE aid_submit::submit_body(\%aid_util::blank_entry,'');

} else { # $opts{"f"}

    if ($opts{"p"} == 0) {
	print OUTFILE "<p>Classes:\n",
	aid_util::class_jump_bar('class/', '.html', \@years, 0), "</p>\n";
    }

    print OUTFILE @lines;
}

print OUTFILE aid_util::common_html_ftr($opts{"p"},$time);

close(OUTFILE);
#utime $time, $time, $outfile;

# touch timestamp
my $now = time;
my $ts = $outfile;
$ts =~ s,([^/]+)$,\.$1,;
open(TS,">$ts") && close(TS);
#utime $now, $now, $ts;

$dbh->disconnect if $connected;
exit(0);
