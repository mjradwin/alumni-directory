#!/usr/bin/perl -w

#
# does the html version of just home pages
# $Id: aid_home_html,v 5.2 1999/06/01 21:24:46 mradwin Exp mradwin $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
push(@INC, $dirname);

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-hs] [-i <infile>] -p <pg> -t <text> <outfile>
 -h            Display usage information.
 -s            Create the submit page.
 -d            Create the download page.
 -i <infile>   Create an 'other' page from html code in <infile>.
 -p <pg>       Use page number <pg> for generating content.  REQUIRED.
 -t <text>     Put a tableheader with 'text'.  REQUIRED.

 <outfile>     Write results to <outfile>.

Either -s, -d or -i must be supplied.  They are mutuallly exclusive.
";

&Getopts('hst:i:p:d') || die "$usage\n";
$opt_h && die "$usage\n";
$opt_h = $opt_h;		# avoid warning
%blank_entry = %aid_util'blank_entry = %aid_util'blank_entry;

die "$usage\n" unless $ARGV[0];
die "$usage\n"
    unless ($opt_s ? 1 : 0) + ($opt_i ? 1 : 0) + ($opt_d ? 1 : 0) == 1;
die "$usage\n" unless defined($opt_p);
die "$usage\n" unless defined($opt_t);

$infile = $opt_i;
$outfile = $ARGV[0];

$dbmfile = &aid_config('dbmfile');
$dbmfile =~ s/\.db$//;

if ($opt_i)
{
    open(INFILE,$infile) || die "Can't open $infile: $!\n";
    $time = (stat(INFILE))[9];
    @lines = <INFILE>;
    close(INFILE);
}
elsif ($opt_s)
{
    $time = (stat(&aid_config('aiddir') . 'bin/aid_submit.pl'))[9];
}
else
{
    die "can't open ${dbmfile}.db\n" unless -r "${dbmfile}.db";
    dbmopen(%DB,$dbmfile,0444);

    die "no _t key!\n" unless defined $DB{'_t'};
    $time = unpack("N",$DB{'_t'});
}

if ($opt_i && $opt_p == 0)
{
    die "can't open ${dbmfile}.db\n" unless -r "${dbmfile}.db";
    dbmopen(%DB,$dbmfile,0444);
    die "no _t key!\n" unless defined $DB{'_t'};
    $time = unpack("N",$DB{'_t'});
    dbmclose(%DB);
}

open(OUTFILE,">$outfile") || die "Can't open $outfile: $!\n";
print OUTFILE &aid_common_html_hdr($opt_p,$opt_t,0,$time);

if ($opt_s) {
    print OUTFILE &aid_submit_body(*blank_entry,'');

} elsif ($opt_d) {
    die "no _years key!\n" unless defined $DB{'_years'};
    @years = unpack("n*",$DB{'_years'});
    push(@years, 'other');

    print OUTFILE "<p>Before downloading nickname and address book files
for your e-mail program, please read the
<a href=\"", &aid_config('master_path'), "etc/copyright.html\">Acceptable
Use Policy</a>.</p>

<p>This feature is recommended for expert users only.
You may need to use the \"import\" feature to merge the address book
with your own.  Aliases (also called nicknames) are of the form
<code><strong>flllllll</strong></code> where
<code><strong>f</strong></code> is first initial and
<code><strong>l</strong></code> is last name.  If there are duplicates
such as John Smith and Jane Smith, then the first one will be
<code><strong>jsmith</strong></code> and the second will be
<code><strong>jsmith2</strong></code>.</p>\n\n";

    print OUTFILE "<form method=\"get\" action=\"";
    print OUTFILE &aid_config('download_cgi') . "\">\n";
    print OUTFILE "<input type=\"hidden\" name=\"download\" value=\"1\" />\n\n";

    print OUTFILE "<label for=\"year\">Year to download:&nbsp;</label>\n";
    print OUTFILE "<select name=\"year\" id=\"year\">\n";
    foreach (@years)
    {
	print OUTFILE "<option";
	print OUTFILE " selected=\"selected\"" if $_ eq '1993';
	print OUTFILE ">$_" unless $_ eq 'other';
	print OUTFILE " value=\"other\">Faculty/Staff" if $_ eq 'other';
	print OUTFILE "</option>\n";
    }
    print OUTFILE "</select>\n";

    print OUTFILE "
<br />

<input type=\"checkbox\" name=\"plusminus\" id=\"plusminus\" /><label
for=\"plusminus\">&nbsp;Also download graduating classes 3 years before and 3
years after mine.</label>

<br />

<label for=\"format\">Format:&nbsp;</label>
<select name=\"format\" id=\"format\">
<option value=\"n\">Netscape 2.x .HTML</option>
<option value=\"n\">Netscape 3.x .HTML</option>
<option value=\"l\">Netscape 4.x .LDIF</option>
<option value=\"w\">Eudora 2.x</option>
<option value=\"m\">Eudora 3.x</option>
<option value=\"m\">Eudora 4.x</option>
<option value=\"o\" selected=\"selected\">Outlook Express .CSV</option>
<option value=\"p\">Pine (Unix)</option>
<option value=\"e\">Elm (Unix)</option>
<option value=\"b\">Berkeley Mail (Unix)</option>
</select>

<br />

<label for=\"email\">Your e-mail address:&nbsp;</label>
<input type=\"text\" name=\"email\" size=\"25\" value=\"\" id=\"email\" />
(for logging purposes only)

<br />

<input type=\"submit\" value=\"Download\" />
</form>\n\n";

} else { # implicit opt_i
    print OUTFILE @lines;
}
print OUTFILE &aid_common_html_ftr($opt_p);

dbmclose(%DB) unless $opt_i || $opt_s;
close(OUTFILE);
utime $time, $time, $outfile;

# touch timestamp
$now = time;
$ts = $outfile;
$ts =~ s,([^/]+)$,\.$1,;
open(TS,">$ts") && close(TS);
utime $now, $now, $ts;

exit(0);
