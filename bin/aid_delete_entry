#!/usr/bin/perl -w

# $Id: aid_edit_entry,v 5.2 1999/06/01 04:43:45 mradwin Exp $
#
#   Copyright (c) 1995-1999  Michael John Radwin
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

$dirname = $0;
$dirname =~ s,/[^/]+$,,;
push(@INC, $dirname);

require 'aid_util.pl';
require 'getopts.pl';

$0 =~ s,.*/,,;  # basename
$usage = "usage: $0 [-hd] infile.db userid
    -h        Display usage information.
    -d        Display debug diffs.
";

&Getopts('hd') || die "$usage\n";
$opt_h && die "$usage\n";
$opt_h = $opt_h;		# avoid warning
$opt_d = $opt_d;		# avoid warning
defined $ARGV[0] || die "$usage\n";
defined $ARGV[1] || die "$usage\n";

$dbmfile = shift;
$dbmfile =~ s/\.db$//;
die "$0: ${dbmfile}.db: $!\n"
    unless (-r "${dbmfile}.db" && -w "${dbmfile}.db");

dbmopen(%DB,$dbmfile,0644) || die "$0: ${dbmfile}.db: $!\n";

$id = shift;
if ($id =~ /^\d+$/)
{
    die "$0: no key $id in ${dbmfile}.db\n" unless defined $DB{$id};
    %rec = &aid_db_unpack_rec($id,$DB{$id});
}
elsif ($id =~ /\@/)
{
    $email = "\L$id\E";
    die "$0: no key \L$id\E in ${dbmfile}.db\n" unless defined $DB{$email};

    $id = unpack("n*", $DB{$email});
    die "$0: no key $id in ${dbmfile}.db\n" unless defined $DB{$id};

    %rec = &aid_db_unpack_rec($id,$DB{$id});
}
else
{
    die "$0: no key $id in ${dbmfile}.db\n";
}

delete $DB{$id};
$email = "\L$rec{'e'}\E";
delete $DB{$email};

local($joined) = &aid_ampersand_join(*rec);
warn "$0: deleting $joined\n";

local(@diffs) = &aid_rebuild_secondary_keys(*DB,0);
if ($opt_d)
{
    foreach (@diffs)
    {
	print "key $_ changed.\n";
    }
}

warn "$0: delete successful\n";
dbmclose(%DB);
exit 0;

